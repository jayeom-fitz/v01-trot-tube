[{"C:\\workspace\\web\\v01-trot-tube\\src\\index.js":"1","C:\\workspace\\web\\v01-trot-tube\\src\\reportWebVitals.js":"2","C:\\workspace\\web\\v01-trot-tube\\src\\components\\Router.js":"3","C:\\workspace\\web\\v01-trot-tube\\src\\routes\\Home.js":"4","C:\\workspace\\web\\v01-trot-tube\\src\\components\\App.js":"5","C:\\workspace\\web\\v01-trot-tube\\src\\FBase.js":"6","C:\\workspace\\web\\v01-trot-tube\\src\\fbase.js":"7","C:\\workspace\\web\\v01-trot-tube\\src\\routes\\Login.js":"8","C:\\workspace\\web\\v01-trot-tube\\src\\routes\\Admin.js":"9","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\header\\Header.js":"10","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\header\\UserIcon.js":"11","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\sidebar\\Sidebar.js":"12","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\sidebar\\SidebarRow.js":"13","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\user\\UserInfo.js":"14","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\user\\UserEdit.js":"15","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\tv-program\\TvProgram.js":"16","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\Main.js":"17","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\sidebar\\Sidebar.js":"18","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\TvProgramSlider.js":"19","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\sidebar\\ManagerBox.js":"20","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\sidebar\\Menu.js":"21","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\sidebar\\SidebarData.js":"22","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\sidebar\\SubMenu.js":"23","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\people\\People.js":"24","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\people\\PersonCard.js":"25","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\people\\Person.js":"26","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\TvPrograms.js":"27","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\TvProgram.js":"28","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\TvProgramAdd.js":"29","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\people\\PeopleAdd.js":"30","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\PeopleBox.js":"31","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\AddPeople.js":"32","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\main\\HomeContents.js":"33","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\main\\TvProgramSlider.js":"34","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\main\\RecentVideos.js":"35","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\tv-program\\AddVideo.js":"36","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\tv-program\\Videos.js":"37","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\video\\Video.js":"38","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\video\\ViewsAndLikes.js":"39","C:\\workspace\\web\\v01-trot-tube\\src\\func.js":"40","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\video\\Comment.js":"41","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\hot\\Hot.js":"42","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\hot\\VideoCard.js":"43","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\like\\Like.js":"44","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\like\\LikeVideo.js":"45","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\guestbook\\GuestBook.js":"46","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\guestbook\\Write.js":"47","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\guestbook\\Comment.js":"48","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\search\\Search.js":"49","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\search\\PersonRow.js":"50","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\search\\VideoRow.js":"51","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\person\\Person.js":"52","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\person\\PersonInfo.js":"53","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\person\\TvProgram.js":"54","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\person\\Video.js":"55","C:\\workspace\\web\\v01-trot-tube\\src\\components\\effect\\Loading.js":"56","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\like\\LikePeople.js":"57","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\users\\Users.js":"58","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\users\\User.js":"59"},{"size":511,"mtime":1612620199951,"results":"60","hashOfConfig":"61"},{"size":362,"mtime":499162500000,"results":"62","hashOfConfig":"61"},{"size":1715,"mtime":1619438201058,"results":"63","hashOfConfig":"61"},{"size":1545,"mtime":1619438187862,"results":"64","hashOfConfig":"61"},{"size":815,"mtime":1613479849048,"results":"65","hashOfConfig":"61"},{"size":537,"mtime":1612622698526,"results":"66","hashOfConfig":"61"},{"size":662,"mtime":1612785403836,"results":"67","hashOfConfig":"61"},{"size":2796,"mtime":1618665056904,"results":"68","hashOfConfig":"61"},{"size":1497,"mtime":1621353556838,"results":"69","hashOfConfig":"61"},{"size":2879,"mtime":1619097169955,"results":"70","hashOfConfig":"61"},{"size":2336,"mtime":1614323677230,"results":"71","hashOfConfig":"61"},{"size":1568,"mtime":1618488802253,"results":"72","hashOfConfig":"61"},{"size":960,"mtime":1617883649456,"results":"73","hashOfConfig":"61"},{"size":3326,"mtime":1620653920147,"results":"74","hashOfConfig":"61"},{"size":2469,"mtime":1614324298894,"results":"75","hashOfConfig":"61"},{"size":7051,"mtime":1620653175323,"results":"76","hashOfConfig":"61"},{"size":231,"mtime":1614324520944,"results":"77","hashOfConfig":"61"},{"size":760,"mtime":1614325725146,"results":"78","hashOfConfig":"61"},{"size":6599,"mtime":1614324532812,"results":"79","hashOfConfig":"61"},{"size":658,"mtime":1614324504161,"results":"80","hashOfConfig":"61"},{"size":618,"mtime":1614393393182,"results":"81","hashOfConfig":"61"},{"size":1041,"mtime":1621353546907,"results":"82","hashOfConfig":"61"},{"size":1576,"mtime":1614324504208,"results":"83","hashOfConfig":"61"},{"size":2969,"mtime":1620823360795,"results":"84","hashOfConfig":"61"},{"size":656,"mtime":1614606025942,"results":"85","hashOfConfig":"61"},{"size":3517,"mtime":1620823394201,"results":"86","hashOfConfig":"61"},{"size":4973,"mtime":1614596758448,"results":"87","hashOfConfig":"61"},{"size":5952,"mtime":1620823214832,"results":"88","hashOfConfig":"61"},{"size":4164,"mtime":1614596737659,"results":"89","hashOfConfig":"61"},{"size":4257,"mtime":1621344622415,"results":"90","hashOfConfig":"61"},{"size":13617,"mtime":1616841414715,"results":"91","hashOfConfig":"61"},{"size":3943,"mtime":1615737996722,"results":"92","hashOfConfig":"61"},{"size":2184,"mtime":1620653698499,"results":"93","hashOfConfig":"61"},{"size":1798,"mtime":1617021152690,"results":"94","hashOfConfig":"61"},{"size":1513,"mtime":1617886348697,"results":"95","hashOfConfig":"61"},{"size":4042,"mtime":1617021906122,"results":"96","hashOfConfig":"61"},{"size":3605,"mtime":1619793997927,"results":"97","hashOfConfig":"61"},{"size":8103,"mtime":1620653969047,"results":"98","hashOfConfig":"61"},{"size":2223,"mtime":1620136872774,"results":"99","hashOfConfig":"61"},{"size":1809,"mtime":1618066855134,"results":"100","hashOfConfig":"61"},{"size":1933,"mtime":1617886224353,"results":"101","hashOfConfig":"61"},{"size":3046,"mtime":1620653549468,"results":"102","hashOfConfig":"61"},{"size":1638,"mtime":1618843711956,"results":"103","hashOfConfig":"61"},{"size":6105,"mtime":1620744091708,"results":"104","hashOfConfig":"61"},{"size":1169,"mtime":1618321314593,"results":"105","hashOfConfig":"61"},{"size":3120,"mtime":1620653511510,"results":"106","hashOfConfig":"61"},{"size":2698,"mtime":1618667381530,"results":"107","hashOfConfig":"61"},{"size":2420,"mtime":1618843728845,"results":"108","hashOfConfig":"61"},{"size":3463,"mtime":1620653856518,"results":"109","hashOfConfig":"61"},{"size":1117,"mtime":1619019778280,"results":"110","hashOfConfig":"61"},{"size":1438,"mtime":1619098078917,"results":"111","hashOfConfig":"61"},{"size":3375,"mtime":1620653773518,"results":"112","hashOfConfig":"61"},{"size":2646,"mtime":1619612771525,"results":"113","hashOfConfig":"61"},{"size":476,"mtime":1619616473156,"results":"114","hashOfConfig":"61"},{"size":931,"mtime":1619686448485,"results":"115","hashOfConfig":"61"},{"size":588,"mtime":1620653412982,"results":"116","hashOfConfig":"61"},{"size":1057,"mtime":1620744175179,"results":"117","hashOfConfig":"61"},{"size":4014,"mtime":1621353582418,"results":"118","hashOfConfig":"61"},{"size":5099,"mtime":1621353688642,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"1awrkgz",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"122"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"122"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"122"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"122"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"122"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"122"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"122"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"122"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"122"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"122"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"122"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\workspace\\web\\v01-trot-tube\\src\\index.js",[],["250","251"],"C:\\workspace\\web\\v01-trot-tube\\src\\reportWebVitals.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\Router.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\routes\\Home.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\App.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\FBase.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\fbase.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\routes\\Login.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\routes\\Admin.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\header\\Header.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\header\\UserIcon.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\sidebar\\Sidebar.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\sidebar\\SidebarRow.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\user\\UserInfo.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\user\\UserEdit.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\tv-program\\TvProgram.js",["252","253","254","255","256"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { storeService } from 'src/fbase'\r\n\r\nimport Avatar from '@material-ui/core/Avatar'\r\n\r\nimport { GoGear } from 'react-icons/go'\r\nimport { VscLoading } from 'react-icons/vsc'\r\n\r\nimport Videos from './Videos';\r\nimport AddVideo from './AddVideo';\r\nimport Loading from 'src/components/effect/Loading';\r\n\r\nfunction TvProgram(props) {\r\n  const { tpid } = useParams();\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [tvProgram, setTvProgram] = useState(null);\r\n  const [directories, setDirectories] = useState([]);\r\n  const [people, setPeople] = useState([]);\r\n  const [value, setValue] = useState(0);\r\n\r\n  const [person, setPerson] = useState(null);\r\n  const [videos, setVideos] = useState([]);\r\n  const [isMore, setIsMore] = useState(true);\r\n\r\n  async function getTvProgram() {\r\n    await storeService.collection('tv-programs').doc(tpid).get().then(function (doc) {\r\n      setTvProgram(doc.data());\r\n    })\r\n  }\r\n\r\n  async function getDirectories() {\r\n    var dir = []; var pp = [];\r\n    const dirRef = storeService.collection('tv-programs').doc(tpid);\r\n\r\n    await dirRef.collection('directories').get().then(function (snapshot) {\r\n      snapshot.forEach(doc => dir.push({\r\n        ...doc.data(), id: doc.id\r\n      }));\r\n    });\r\n\r\n    await dirRef.collection('people').get().then(function (snapshot) {\r\n      var index = 0;\r\n      snapshot.forEach(function (doc) {\r\n        pp.push({ \r\n          id: doc.id,\r\n          dir: doc.data().dir,\r\n          index: index++ \r\n        })\r\n      });\r\n    });\r\n\r\n    for(var i=0; i<pp.length; i++) {\r\n      await storeService.collection('people').doc(pp[i].id).get().then(function (person) {\r\n        pp[i].name = person.data().name;\r\n        pp[i].image = person.data().image;  \r\n      })\r\n    }\r\n\r\n    setDirectories(dir.sort(function (a,b) {\r\n      return a.index - b.index;\r\n    })); setPeople(pp);\r\n  }\r\n\r\n  async function init() {\r\n    await getTvProgram(); \r\n    await getDirectories();\r\n    setLoaded(true);\r\n    setValue(value + 1);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(value === 0) {\r\n      init();\r\n    }\r\n  }, [value])\r\n\r\n  async function getVideosOfPerson(index) {\r\n    if(person === null || (index !== person.index)) {\r\n      setPerson(people[index]); setIsMore(true);\r\n      var array = []; var arr = [];\r\n\r\n      await storeService.collection('people').doc(people[index].id)\r\n        .collection('videos').where('tpid', '==', tpid).orderBy('createdAt', 'desc').limit(10)\r\n        .get().then(function (snapshot) {\r\n          if(snapshot.empty || snapshot.size % 10 !== 0) \r\n            setIsMore(false);\r\n\r\n          snapshot.forEach(function (doc) {\r\n            arr.push(doc.id) \r\n          })\r\n        })\r\n      \r\n      for(var i=0; i<arr.length; i++) {\r\n        await storeService.collection('videos').doc(arr[i]).get().then(function (video) {\r\n          array.push({\r\n            ...video.data(),\r\n            id: arr[i]\r\n          })      \r\n        }) \r\n      }\r\n\r\n      setVideos(array); setValue(value + 1);\r\n    }\r\n    document.getElementById(\"videos\").style.right = \"0\";\r\n  }\r\n\r\n  async function getMoreVideos() {\r\n    var array = []; var arr = [];\r\n\r\n    await storeService.collection('people').doc(person.id)\r\n      .collection('videos').where('tpid', '==', tpid)\r\n      .orderBy('createdAt', 'desc').startAfter(videos[videos.length-1].createdAt).limit(10)\r\n      .get().then(function (snapshot) {\r\n        if(snapshot.empty || snapshot.size % 10 !== 0) \r\n          setIsMore(false);\r\n\r\n        snapshot.forEach(function (doc) {\r\n          arr.push(doc.id)  \r\n        }) \r\n      })\r\n\r\n    for(var i=0; i<arr.length; i++) {\r\n      await storeService.collection('videos').doc(arr[i]).get().then(function (video) {\r\n        array.push({\r\n          ...video.data(),\r\n          id: arr[i]\r\n        })      \r\n      }) \r\n    }\r\n\r\n    setVideos([...videos, ...array]); setValue(value + 1);\r\n  } \r\n\r\n  return (\r\n    <Container>\r\n      {tvProgram && loaded ? <>\r\n        {props.user && props.user.verified === 2 && person && <>\r\n          <AddVideo person={person} />\r\n        </>}\r\n        \r\n        <Videos \r\n          person={person}\r\n          videos={videos}\r\n          verified={props.user ? props.user.verified : 0}\r\n          isMore={isMore}\r\n          getMoreVideos={getMoreVideos}\r\n        />\r\n\r\n        <Title>\r\n          <Image src={tvProgram.image} />\r\n          {props.user && props.user.verified === 2 && <>\r\n            <Link to={`/admin/tv-program/${tpid}`}>\r\n              <GoGear color='black' size='24' />\r\n            </Link>\r\n          </>}\r\n        </Title>\r\n        \r\n        <Directories>\r\n          {directories.length === 0 ? <>디렉토리가 없습니다</> :\r\n            directories.map((directory) => \r\n            <Directory key={directory.id}>\r\n              <DirectoryTitle \r\n                tcolor={directory.textColor}\r\n                bcolor={directory.bgColor}\r\n              >\r\n                <span>{directory.title}</span>\r\n              </DirectoryTitle>\r\n\r\n              <People bcolor={directory.bgColor}>\r\n              {people.filter((person) => person.dir === directory.id)\r\n                .map((p) => (\r\n                  <PersonCard \r\n                    key={`person-${p.id}`}\r\n                    onClick={() => getVideosOfPerson(p.index)}\r\n                  >\r\n                    <StyledAvatar src={p.image} />\r\n                    <Name>{p.name}</Name>\r\n                  </PersonCard>\r\n              ))}\r\n              </People>\r\n            </Directory>\r\n            )\r\n          }\r\n        </Directories>\r\n      </> : <>\r\n      <Loading />\r\n      </>}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default TvProgram\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  background-color: #f9f9f9;\r\n  padding: 20px;\r\n`\r\nconst Title = styled.div`\r\n  text-align: center;\r\n  padding-bottom: 30px;\r\n`\r\nconst Image = styled.img`\r\n  width: 50%;\r\n`\r\nconst Directories = styled.div`\r\n  width: 100%;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`\r\nconst Directory = styled.div`\r\n  padding: 10px;\r\n`\r\nconst DirectoryTitle = styled.div`\r\n  display: flex;\r\n  width: 200px;\r\n  height: 20px;\r\n  padding: 5px;\r\n  justify-content: center;\r\n  color: #${(props) => props.tcolor || 'ffffff'};\r\n  background-color: #${(props) => props.bcolor || '000000'};\r\n`\r\nconst People = styled.div`\r\n  min-width: 200px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  border: 1px solid #${(props) => props.bcolor || '000000'};\r\n`\r\nconst PersonCard = styled.div`\r\n  width: 150px;\r\n  padding-top: 10px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: lightgrey;\r\n  }\r\n`\r\nconst StyledAvatar = styled(Avatar)`\r\n  width: 120px !important;\r\n  height: 120px !important;\r\n  margin: auto;\r\n  border: 1px solid lightgrey;\r\n`\r\nconst Name = styled.h4`\r\n  text-align: center;\r\n  padding: 10px;\r\n  margin: 0;\r\n`\r\nconst StyledVscLoading = styled(VscLoading)`\r\n  \r\n`","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\Main.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\sidebar\\Sidebar.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\TvProgramSlider.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\sidebar\\ManagerBox.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\sidebar\\Menu.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\sidebar\\SidebarData.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\sidebar\\SubMenu.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\people\\People.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\people\\PersonCard.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\people\\Person.js",["257"],"import React, { useState, useEffect } from 'react'\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nimport styled from 'styled-components'\r\n\r\nimport { storeService } from \"src/fbase\"\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Loading from 'src/components/effect/Loading';\r\n\r\nfunction Person() {\r\n  const { id } = useParams();\r\n  \r\n  const [loaded, setLoaded] = useState(false);\r\n  const [person, setPerson] = useState(null);\r\n  const [name, setName] = useState('');\r\n\r\n  async function getData() {\r\n    const pref = storeService.collection('people').doc(id);\r\n  \r\n    await pref.get().then(function (doc) {\r\n      setPerson({\r\n        id,\r\n        ...doc.data()\r\n      });\r\n      setName(doc.data().name);\r\n    })\r\n\r\n    setLoaded(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [])\r\n\r\n  const setData = () => {   \r\n    setPerson({\r\n      id,\r\n      name: document.getElementById('name').value,\r\n      birth: document.getElementById('birth').value,\r\n      image: document.getElementById('image').value,\r\n      company: document.getElementById('company').value,\r\n    });\r\n  }\r\n\r\n  async function onSave() {\r\n    const pref = storeService.collection('people').doc(id);\r\n\r\n    pref.update({...person});\r\n\r\n    alert('저장되었습니다.')\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {loaded ? person && <>\r\n        <Title>[ {name} ] 의 정보</Title>\r\n        \r\n        <Content>\r\n          <Link to={`/person/${id}`}>\r\n            <StyledAvatar src={person.image} />\r\n          </Link>\r\n\r\n          <div style={{paddingLeft:'50px'}}>\r\n            <InputBox>\r\n              <Text>아이디</Text>\r\n              <Input value={id} readOnly/>\r\n            </InputBox>\r\n            \r\n            <InputBox>\r\n              <Text>이름</Text>\r\n              <Input id='name' value={person.name} onChange={setData}/>\r\n            </InputBox>\r\n\r\n            <InputBox>\r\n              <Text>생년월일</Text>\r\n              <Input id='birth' value={person.birth} onChange={setData}/>\r\n            </InputBox>\r\n\r\n            <InputBox>\r\n              <Text>이미지</Text>\r\n              <Input id='image' value={person.image} onChange={setData}/>\r\n            </InputBox>\r\n\r\n            <InputBox>\r\n              <Text>소속사</Text>\r\n              <Input id='company' value={person.company} onChange={setData}/>\r\n            </InputBox> \r\n          </div>\r\n        </Content>\r\n\r\n        <div style={{textAlign:'center'}}>\r\n          <Button onClick={() => onSave()}> 저장 </Button>\r\n        </div>\r\n      </> : <Loading />}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Person\r\n\r\nconst Container = styled.div`\r\n  width: 80%;\r\n  padding: 40px;\r\n`\r\nconst Title = styled.h1`\r\n  margin: 0;\r\n`\r\nconst Content = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20px;\r\n  width: 90%;\r\n`\r\nconst StyledAvatar = styled(Avatar)`\r\n  height: 140px !important;\r\n  width: 140px !important;\r\n  margin: 10px 30px;\r\n  border: 1px solid grey;\r\n`\r\nconst InputBox = styled.div`\r\n  display: flex;\r\n  width: 400px;\r\n  align-items: center;\r\n`\r\nconst Text = styled.h4`\r\n  flex: 0.2;\r\n  text-align: center;\r\n  margin: 10px 0;\r\n`\r\nconst Input = styled.input`\r\n  flex: 0.8;\r\n  height: 30px;\r\n  margin: 10px 10px;\r\n  padding-left: 5px;\r\n  border: 1px solid lightgrey;\r\n\r\n  &:focus {\r\n    outline: 2px solid #20B2AA;\r\n  }\r\n`\r\nconst Button = styled.button`\r\n  padding: 10px 20px;\r\n  font-weight: bold;\r\n  border: none;\r\n  background-color: #00C851;\r\n\r\n  &:hover {\r\n    background-color: #007E33;\r\n  }\r\n`","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\TvPrograms.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\TvProgram.js",["258","259"],"import React, { useState, useEffect } from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport styled from 'styled-components'\r\n\r\nimport { storeService } from \"src/fbase\"\r\n\r\nimport PeopleBox from './PeopleBox';\r\nimport Loading from 'src/components/effect/Loading';\r\n\r\nfunction TvProgram() {\r\n  const { id } = useParams();\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [tvProgram, setTvProgram] = useState(null);\r\n  const [title, setTitle] = useState('');\r\n  const [directories, setDirectories] = useState([]);\r\n  const [addedPeople, setAddedPeople] = useState([]);\r\n  const [people, setPeople] = useState([]);\r\n\r\n  async function getTvProgram() {\r\n    await storeService.collection('tv-programs').doc(id).get().then(function (doc) {\r\n      setTvProgram(doc.data());\r\n      setTitle(doc.data().title);\r\n    })\r\n  }\r\n\r\n  async function getDirectories() {\r\n    var dir = []; var pp = []; var arr = []; var array = [];\r\n    const dirRef = storeService.collection('tv-programs').doc(id);\r\n\r\n    await dirRef.collection('directories').get().then(function (snapshot) {\r\n      snapshot.forEach(doc => dir.push({\r\n        ...doc.data(), id: doc.id, onDB: true, updated: false\r\n      }));\r\n    });\r\n\r\n    await dirRef.collection('people').get().then(function (snapshot) {\r\n      snapshot.forEach(function (doc) {\r\n        array.push({\r\n          id: doc.id,\r\n          dir: doc.data().dir\r\n        })\r\n      });\r\n    });\r\n\r\n    for(var i=0; i<array.length; i++) {\r\n      await storeService.collection('people').doc(array[i].id).get().then(function (person) {\r\n        pp.push({\r\n          id: array[i].id,\r\n          dir: array[i].dir, \r\n          name: person.data().name,\r\n          image: person.data().image,\r\n          onDB: true, updated: false\r\n        })      \r\n      }) \r\n    }\r\n\r\n\r\n    await storeService.collection('people').get().then(function (snapshot) {  \r\n      snapshot.forEach(doc => {\r\n        if(pp.filter(person => person.id === doc.id).length === 0) {\r\n          arr.push({\r\n            id: doc.id, \r\n            image: doc.data().image,\r\n            name: doc.data().name,\r\n            active: true,\r\n            selected: false,\r\n          })       \r\n        }\r\n      }); \r\n    });\r\n\r\n    setDirectories(dir.sort(function (a,b) {\r\n      return a.index - b.index;\r\n    })); setAddedPeople(pp); setPeople(arr);\r\n  }\r\n\r\n  async function init() {\r\n    await getTvProgram(); \r\n    await getDirectories();\r\n    setLoaded(true)\r\n  }\r\n\r\n  useEffect(() => init(), [])\r\n\r\n  const onInfoSave = async () => {\r\n    if(!tvProgram.image || !tvProgram.title || !tvProgram.year || !tvProgram.channel) {\r\n      alert('모든 값을 입력하세요.'); return;\r\n    }\r\n    \r\n    const docRef = storeService.collection('tv-programs').doc(id);\r\n \r\n    await docRef.get().then(function(doc) {\r\n      docRef.update(tvProgram);\r\n      alert('저장되었습니다.');\r\n      setTitle(tvProgram.title);\r\n    }).catch(function(error) {\r\n      alert(\"Error getting document:\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loaded ? tvProgram &&\r\n        <div style={{width:'100%'}}>\r\n          <Container>\r\n            <Title>TV 프로그램 관리 - {title} [{id}]</Title>\r\n            \r\n            <BoxContainer>\r\n              <Box>\r\n                <Image src={tvProgram.image} alt=\"\" />\r\n              </Box>\r\n\r\n              <Box>\r\n                <InputBox>\r\n                  <Text>제목</Text>\r\n                  <Input \r\n                    value={tvProgram.title} \r\n                    onChange={(v) => setTvProgram({...tvProgram, title: v.target.value})} />\r\n                </InputBox>\r\n\r\n                <InputBox>\r\n                  <Text>이미지</Text>\r\n                  <Input \r\n                    value={tvProgram.image}\r\n                    onChange={(v) => setTvProgram({...tvProgram, image: v.target.value})} />\r\n                </InputBox>\r\n\r\n                <InputBox>\r\n                  <Text>방송사</Text>\r\n                  <Input \r\n                    value={tvProgram.channel}\r\n                    onChange={(v) => setTvProgram({...tvProgram, channel: v.target.value})} />\r\n                </InputBox>\r\n\r\n                <InputBox>\r\n                  <Text>방송년도</Text>\r\n                  <Input \r\n                    value={tvProgram.year} type=\"number\"\r\n                    onChange={(v) => setTvProgram({...tvProgram, year: v.target.value})} />\r\n                </InputBox>\r\n              </Box>\r\n            </BoxContainer>\r\n\r\n            <InputBox>\r\n              <Button onClick={onInfoSave}>저장</Button>\r\n            </InputBox>\r\n\r\n            <PeopleBox \r\n              directories={directories} setDirectories={setDirectories}\r\n              addedPeople={addedPeople} setAddedPeople={setAddedPeople}\r\n              people={people} setPeople={setPeople}\r\n            />            \r\n          </Container>\r\n        </div>\r\n      : <Loading />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TvProgram\r\n\r\nconst Container = styled.div`\r\n  padding: 40px;\r\n`\r\nconst Title = styled.h1`\r\n  margin: 0;\r\n`\r\nconst BoxContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 90%;\r\n  margin: auto;\r\n  padding: 20px;\r\n`\r\nconst Box = styled.div`\r\n  flex: 0.5;\r\n  text-align: center;\r\n`\r\nconst Image = styled.img`\r\n  width: 80%;\r\n  margin: 0 0;\r\n  padding: 10px 10px;\r\n  border: 1px solid lightgrey;\r\n`\r\nconst InputBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\nconst Text = styled.h4`\r\n  flex: 0.2;\r\n  text-align: center;\r\n  margin: 10px 0;\r\n`\r\nconst Input = styled.input`\r\n  flex: 0.8;\r\n  height: 30px;\r\n  margin: 10px 10px;\r\n  padding-left: 5px;\r\n  border: 1px solid lightgrey;\r\n\r\n  &:focus {\r\n    outline: 2px solid #20B2AA;\r\n  }\r\n`\r\nconst Button = styled.button`\r\n  width: 75px;\r\n  height: 50px;\r\n  margin: auto;\r\n  border: none;\r\n  transition-duration: 0.4s;\r\n  background-color: #00C851;\r\n\r\n  &:hover {\r\n    color: white;\r\n    background-color: #007E33;\r\n  }\r\n`","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\TvProgramAdd.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\people\\PeopleAdd.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\PeopleBox.js",["260","261","262","263"],"import React, { useState } from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport styled from 'styled-components'\r\n\r\nimport { storeService } from \"src/fbase\"\r\n\r\nimport { AiOutlineArrowUp, AiOutlineArrowDown } from 'react-icons/ai'\r\nimport { BsPlusCircle } from 'react-icons/bs'\r\nimport Avatar from '@material-ui/core/Avatar'\r\n\r\nimport AddPeople from './AddPeople'\r\n\r\nfunction PeopleBox(props) {\r\n  const { id } = useParams();\r\n\r\n  const [deleted, setDeleted] = useState([]);\r\n\r\n  const [did, setDid] = useState('');\r\n  const [dtitle, setDtitle] = useState('');\r\n\r\n  const onAddDirectoryClick = () => {\r\n    props.setDirectories([...props.directories, {\r\n      id: `directory${props.directories.length}`,\r\n      index: props.directories.length,\r\n      title: '새 디렉토리',\r\n      textColor: 'ffffff',\r\n      bgColor: '000000',\r\n      onDB: false,\r\n      updated: true,\r\n    }]);\r\n  }\r\n\r\n  const onApplyClick = (id) => {\r\n    let arr = props.directories.slice();\r\n    var i;\r\n    for(i=0; i<arr.length; i++) {\r\n      if(id === arr[i].id){\r\n        if(!arr[i].onDB && document.getElementById(id).value !== '') {\r\n          for(var j=0; j<arr.length; j++) {\r\n            if(i !== j && document.getElementById(id).value === arr[j].id) {\r\n              alert('중복된 id 입니다.')\r\n              document.getElementById(id).focus();\r\n              return;\r\n            }\r\n          }\r\n          arr[i].id = document.getElementById(id).value;\r\n        }\r\n\r\n        if(document.getElementById(`${id}-title`).value !== '') \r\n          arr[i].title = document.getElementById(`${id}-title`).value;\r\n        if(document.getElementById(`${id}-tcolor`).value !== '') \r\n          arr[i].textColor = document.getElementById(`${id}-tcolor`).value;\r\n        if(document.getElementById(`${id}-bgcolor`).value !== '') \r\n          arr[i].bgColor = document.getElementById(`${id}-bgcolor`).value;\r\n        break;\r\n      }\r\n    }\r\n    arr[i].updated = true;\r\n    props.setDirectories(arr);\r\n  }\r\n\r\n  const onDeleteClick = (idx) => {\r\n    if(props.directories[idx].onDB || \r\n        props.addedPeople.filter(person => person.dir === props.directories[idx].id).length !== 0) \r\n      setDeleted([...deleted, props.directories[idx]]);\r\n\r\n    if(props.directories.length === 1) {\r\n      props.setDirectories([]);      \r\n    } else {\r\n      let arr = [];\r\n\r\n      if(idx === 0) \r\n        arr = props.directories.slice(1);\r\n      else if(idx === props.directories.length-1) \r\n        arr = props.directories.slice(0,idx);\r\n      else\r\n        arr = [...props.directories.slice(0,idx), ...props.directories.slice(idx+1)];\r\n\r\n      for(var i=0; i<arr.length; i++)\r\n        arr[i].index = i;\r\n        props.setDirectories(arr);\r\n    }\r\n  }\r\n\r\n  const onMoveClick = ({idx, dir}) => {\r\n    if(idx + dir < 0 || idx + dir >= props.directories.length) \r\n      return;\r\n\r\n    var arr = props.directories.slice();\r\n\r\n    var a = arr[idx]; \r\n    a.index = idx + dir; \r\n    a.updated = true;\r\n\r\n    arr[idx] = arr[idx + dir]; \r\n    arr[idx].index = idx; \r\n    arr[idx].updated = true;\r\n\r\n    arr[idx + dir] = a;\r\n    props.setDirectories(arr);\r\n  }\r\n\r\n  const onAddPeopleButtonClick = (idx) => {\r\n    setDid(props.directories[idx].id);    setDtitle(props.directories[idx].title);\r\n    document.getElementById(\"AddPeople\").style.right = \"0\";\r\n  }\r\n  \r\n  const onAddPeople = (array) => {\r\n    var arr = props.addedPeople.slice();\r\n    array.map(data => arr.push({\r\n      id: data.id, \r\n      image: data.image, \r\n      name: data.name,\r\n      dir: did,\r\n      onDB: false,\r\n      updated: true\r\n    }));\r\n    props.setAddedPeople(arr);\r\n  }\r\n\r\n  const onPersonMove = ({idx, dir, pid}) => {\r\n    if(idx + dir < 0 || idx + dir >= props.directories.length) \r\n      return;\r\n\r\n    var arr = props.addedPeople.slice();\r\n    for(var i=0; i<arr.length; i++) {\r\n      if(arr[i].id === pid) {\r\n        arr[i].dir = props.directories[idx + dir].id;\r\n        arr[i].updated = true;\r\n        break;\r\n      }\r\n    }\r\n    props.setAddedPeople(arr);\r\n  }\r\n\r\n  const onSave = async () => {\r\n    var arr = props.addedPeople.slice();\r\n\r\n    if(deleted.length !== 0) {\r\n      for(var i=0; i<deleted.length; i++){\r\n        if(deleted[i].onDB) {\r\n          await storeService.collection('tv-programs').doc(id)\r\n          .collection('directories').doc(deleted[i].id).delete();\r\n        }\r\n\r\n        var del = arr.filter(data => data.dir === deleted[i].id);\r\n        if(del.length !== 0) {\r\n          arr = arr.filter(data => data.dir !== deleted[i].id);\r\n          for(var j=0; j<del.length; j++) {\r\n            await storeService.collection('people').doc(del[j].id)\r\n              .collection('tv-programs').doc(id).delete();\r\n            await storeService.collection('tv-programs').doc(id)\r\n              .collection('people').doc(del[j].id).delete();\r\n          }\r\n        }\r\n      }\r\n      setDeleted([]);\r\n    }\r\n\r\n    const dirRef = storeService.collection('tv-programs').doc(id);\r\n    for(var i=0; i<props.directories.length; i++) {\r\n      if(!props.directories[i].onDB || props.directories[i].updated) {\r\n        await dirRef.collection('directories').doc(props.directories[i].id).set({\r\n          index: props.directories[i].index,\r\n          title: props.directories[i].title,\r\n          textColor: props.directories[i].textColor,\r\n          bgColor: props.directories[i].bgColor,\r\n        })\r\n      } \r\n    }\r\n\r\n    const ppRef = storeService.collection('people');\r\n    for(var i=0; i<arr.length; i++) {\r\n      if(!arr[i].onDB) {\r\n        await ppRef.doc(arr[i].id).collection('tv-programs').doc(id).set({\r\n          addedDate: Date.now()\r\n        })\r\n        arr[i].onDB = true;\r\n      }\r\n      if(arr[i].updated) {\r\n        await dirRef.collection('people').doc(arr[i].id).set({\r\n          dir: arr[i].dir\r\n        })\r\n        arr[i].updated = false;\r\n      }\r\n    }\r\n    props.setPeople(arr);\r\n    alert('저장되었습니다.');\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <AddPeople\r\n        id={did}\r\n        title={dtitle}\r\n        people={props.people} setPeople={props.setPeople}\r\n        addedPeople={props.addedPeople}\r\n        onAddPeople={onAddPeople}\r\n      />\r\n\r\n      {props.directories.length === 0\r\n        ? null\r\n        : props.directories.map((data) => (\r\n            <Directory key={data.id}>\r\n              <Setting>\r\n                <DirectorySetting>\r\n                  <div>\r\n                    {data.onDB ? null : (\r\n                      <Input id={data.id} width=\"100px\" placeholder=\"id...\" />\r\n                    )}\r\n                    {data.id}\r\n                  </div>\r\n                  <div>\r\n                    <Input\r\n                      id={`${data.id}-title`}\r\n                      width=\"150px\"\r\n                      placeholder=\"title...\"\r\n                    />\r\n                    {data.title}\r\n                  </div>\r\n                  <div>\r\n                    <Input\r\n                      id={`${data.id}-bgcolor`}\r\n                      width=\"100px\"\r\n                      placeholder=\"bg-color...\"\r\n                    />\r\n                    {data.bgColor}\r\n                  </div>\r\n                  <div>\r\n                    <Input\r\n                      id={`${data.id}-tcolor`}\r\n                      width=\"100px\"\r\n                      placeholder=\"text-color...\"\r\n                    />\r\n                    {data.textColor}\r\n                  </div>\r\n                </DirectorySetting>\r\n\r\n                <ButtonBox>\r\n                  <Button\r\n                    color=\"#0275d8\"\r\n                    hoverColor=\"\"\r\n                    hoverBColor=\"#003399\"\r\n                    onClick={() => onApplyClick(data.id)}\r\n                  >\r\n                    적용\r\n                  </Button>\r\n                  <Button\r\n                    color=\"#d9534f\"\r\n                    hoverColor=\"\"\r\n                    hoverBColor=\"#ae423f\"\r\n                    onClick={() => onDeleteClick(data.index)}\r\n                  >\r\n                    삭제\r\n                  </Button>\r\n                  <Button\r\n                    color=\"#FFC0CB\"\r\n                    hoverColor=\"\"\r\n                    hoverBColor=\"#FF69B4\"\r\n                    onClick={() => onMoveClick({ idx: data.index, dir: -1 })}\r\n                  >\r\n                    <AiOutlineArrowUp />\r\n                  </Button>\r\n                  <Button\r\n                    color=\"#87CEEB\"\r\n                    hoverColor=\"\"\r\n                    hoverBColor=\"#00CCCC\"\r\n                    onClick={() => onMoveClick({ idx: data.index, dir: 1 })}\r\n                  >\r\n                    <AiOutlineArrowDown />\r\n                  </Button>\r\n                </ButtonBox>\r\n              </Setting>\r\n\r\n              <DirectoryContent>\r\n                <TopLine>\r\n                  <DirectoryContentTitle\r\n                    tcolor={data.textColor}\r\n                    bcolor={data.bgColor}\r\n                  >\r\n                    {data.title}\r\n                  </DirectoryContentTitle>\r\n                </TopLine>\r\n\r\n                <People bcolor={data.bgColor}>\r\n                  {props.addedPeople\r\n                    .filter((person) => person.dir === data.id)\r\n                    .map((p) => (\r\n                      <PersonCard key={`person-${p.id}`}>\r\n                        <StyledAvatar src={p.image} />\r\n                        <Name>{p.name}</Name>\r\n                        <div style={{textAlign:'center'}}>\r\n                          <ArrowButton \r\n                            onClick={() => onPersonMove({\r\n                              idx: data.index, \r\n                              dir: -1,\r\n                              pid: p.id\r\n                            })}>\r\n                            <AiOutlineArrowUp />\r\n                          </ArrowButton>\r\n                          <ArrowButton \r\n                            onClick={() => onPersonMove({\r\n                              idx: data.index, \r\n                              dir: 1,\r\n                              pid: p.id\r\n                            })}>\r\n                            <AiOutlineArrowDown />\r\n                          </ArrowButton>\r\n                        </div>\r\n                      </PersonCard>\r\n                    ))}\r\n                  <AddPeopleButton\r\n                    onClick={() => onAddPeopleButtonClick(data.index)}\r\n                  >\r\n                    <BsPlusCircle\r\n                      style={{ margin: \"auto\" }}\r\n                      size=\"24\"\r\n                      color=\"grey\"\r\n                    />\r\n                  </AddPeopleButton>\r\n                </People>\r\n              </DirectoryContent>\r\n            </Directory>\r\n          ))}\r\n\r\n      <AddBox onClick={onAddDirectoryClick}>\r\n        <BsPlusCircle style={{ margin: \"auto\" }} size=\"24\" color=\"grey\" />\r\n      </AddBox>\r\n\r\n      <InputBox>\r\n        <Button onClick={onSave}>저장</Button>\r\n      </InputBox>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PeopleBox\r\n\r\nconst Container = styled.div`\r\n  width: 90%;\r\n  margin: auto;\r\n  padding: 20px;\r\n`\r\nconst Directory = styled.div`\r\n  width: 100%;\r\n  margin: 10px;\r\n`\r\nconst Setting = styled.div`\r\n  display: flex;\r\n  padding: 10px;\r\n  justify-content: center;\r\n`\r\nconst DirectorySetting = styled.div`\r\n  flex: 0.6;\r\n  padding: 10px;\r\n`\r\nconst ButtonBox = styled.div`\r\n  flex: 0.4;\r\n  align-items: center;\r\n  vertical-align: middle;\r\n`\r\nconst DirectoryContent = styled.div`\r\n  padding: 10px;\r\n`\r\nconst People = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  border: 1px solid #${(props) => props.bcolor || '000000'};\r\n`\r\nconst AddPeopleButton = styled.div`\r\n  display: flex;\r\n  width: 150px;\r\n  height: 200px;\r\n  margin: 10px;\r\n  border: 1px solid lightgrey;\r\n  border-radius: 20px;\r\n  align-items: center;\r\n  background-color: #ddd;\r\n\r\n  &:hover {\r\n    background-color: #aaa;\r\n  }\r\n`\r\nconst TopLine = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\nconst Input = styled.input`\r\n  width: ${(props) => props.width || '50px'};\r\n  margin-right: 10px;\r\n  padding: 5px;\r\n`\r\nconst DirectoryContentTitle = styled.div`\r\n  width: 200px;\r\n  height: 20px;\r\n  padding: 5px;\r\n  text-align: center;\r\n  color: #${(props) => props.tcolor || 'ffffff'};\r\n  background-color: #${(props) => props.bcolor || '000000'};\r\n`\r\nconst AddBox = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100px;\r\n  margin-top: 20px;\r\n  border: 1px solid lightgrey;\r\n  border-radius: 20px;\r\n  align-items: center;\r\n  background-color: #ddd;\r\n\r\n  &:hover {\r\n    background-color: #aaa;\r\n  }\r\n`\r\nconst InputBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n`\r\nconst Button = styled.button`\r\n  width: 75px;\r\n  height: 50px;\r\n  margin: auto;\r\n  border: none;\r\n  transition-duration: 0.4s;\r\n  background-color: ${(props) => props.color || '#00C851'};\r\n\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || 'white'};\r\n    background-color: ${(props) => props.hoverBColor || '#007E33'};\r\n  }\r\n`\r\nconst PersonCard = styled.div`\r\n  width: 120px;\r\n  padding-top: 10px;\r\n\r\n  &:hover {\r\n    background-color: lightgrey;\r\n  }\r\n`\r\nconst StyledAvatar = styled(Avatar)`\r\n  width: 100px !important;\r\n  height: 100px !important;\r\n  margin: auto;\r\n  border: 1px solid lightgrey;\r\n`\r\nconst Name = styled.h4`\r\n  text-align: center;\r\n  padding: 10px;\r\n  margin: 0;\r\n`\r\nconst ArrowButton = styled.div`\r\n  width: 20px;\r\n  display: inline-block;\r\n  text-align: center;\r\n  border: 2px solid grey;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    pointer-events: none;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: aquamarine;\r\n  }\r\n`","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\AddPeople.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\main\\HomeContents.js",["264","265"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { storeService } from \"src/fbase\";\r\n\r\nimport TvProgramSlider from './TvProgramSlider';\r\nimport RecentVideos from './RecentVideos';\r\nimport Loading from 'src/components/effect/Loading';\r\n\r\nfunction HomeContents(props) {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [tvs, setTvs] = useState([]);\r\n  const [videos, setVideos] = useState([]);\r\n    \r\n  async function getTvPrograms() {\r\n    let arr = [];\r\n    await storeService.collection('tv-programs')\r\n                    .where('sliderIndex', '!=', 0)\r\n                    .get().then(function (snapshot) {\r\n      snapshot.forEach(doc => arr.push({...doc.data(), id: doc.id}));\r\n    });\r\n\r\n    setTvs([...arr.sort(function (a, b) {\r\n      return a.sliderIndex - b.sliderIndex;\r\n    })]);\r\n  }\r\n\r\n  async function getRecentVideos() {\r\n    var array = [];\r\n\r\n    const ref = storeService.collection('videos');\r\n\r\n    await ref.orderBy('createdAt', 'desc').limit(20).get()\r\n      .then(function (snapshot) {\r\n        snapshot.forEach(function (doc) {\r\n          array.push({\r\n            ...doc.data(),\r\n            id: doc.id,\r\n          })\r\n        })\r\n      })\r\n      \r\n    for(var i=0; i<array.length; i++) {\r\n      var singer = '';\r\n  \r\n      await ref.doc(array[i].id).collection('singer').get().then(function (p) {\r\n        p.forEach(function(person) {\r\n          if(singer === '') singer = person.data().name;\r\n          else singer = singer + ', ' + person.data().name;\r\n        })\r\n      })\r\n         \r\n      array[i].singer = singer;\r\n    }\r\n\r\n    setVideos(array);\r\n  }\r\n\r\n  async function init() {\r\n    await getTvPrograms(); \r\n    await getRecentVideos();\r\n    setLoaded(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, [])\r\n  \r\n  return (\r\n    <Container>\r\n      {loaded ? <>\r\n        <TvProgramSlider user={props.user} tvs={tvs}/>\r\n        <RecentVideos videos={videos} />\r\n      </> : <>\r\n        <Loading />\r\n      </>}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default HomeContents\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  background-color: #f9f9f9;\r\n  padding: 0px 10px;\r\n  padding-bottom: 0;\r\n`","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\main\\TvProgramSlider.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\main\\RecentVideos.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\tv-program\\AddVideo.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\tv-program\\Videos.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\video\\Video.js",["266"],"import React, { useState, useEffect } from 'react' \r\nimport { useParams } from \"react-router-dom\";\r\nimport uuid from 'react-uuid'\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { storeService } from \"src/fbase\";\r\n\r\nimport ViewsAndLikes from './ViewsAndLikes'\r\nimport Comment from './Comment'\r\nimport Loading from 'src/components/effect/Loading';\r\n\r\nfunction Video(props) {\r\n  const { vid } = useParams();\r\n  const ref = storeService.collection('videos').doc(vid);\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [video, setVideo] = useState(null);\r\n  const [singer, setSinger] = useState([]);\r\n  const [comments, setComments] = useState([]);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [myComment, setMyComment] = useState('');\r\n\r\n  const [value, setValue] = useState(0);\r\n  const [delay, setDelay] = useState(false);\r\n  const [more, setMore] = useState(true);\r\n\r\n  async function init() {\r\n    var array = [];\r\n    var length = 0;\r\n\r\n    await ref.get().then(function (doc) {\r\n      setVideo({...doc.data()});\r\n    })\r\n\r\n    await ref.collection('singer').get().then(function (snapshot) {\r\n      snapshot.forEach(function (singer) {\r\n        array.push({\r\n          ...singer.data(),\r\n          id: singer.id\r\n        })\r\n        length = singer.data().commentsCount;\r\n      })\r\n      setSinger(array);\r\n    })\r\n\r\n    await ref.collection('comments').orderBy('createdAt', 'desc').limit(10)\r\n      .get().then(function(snapshot) {\r\n        array = [];\r\n        snapshot.forEach(function (data) {\r\n          array.push({\r\n            ...data.data(),\r\n            id: data.id\r\n          })\r\n        })\r\n        setComments(array);\r\n      })\r\n\r\n    if(array.length === length) setMore(false);\r\n\r\n    setLoaded(true);\r\n    setTimeout(() => setValue(value + 1), 1500);\r\n    setTimeout(() => upViews(), 60000);\r\n  }\r\n\r\n  async function getLiked() {\r\n    if(props.user !== null) {\r\n      await ref.collection('liked').doc(props.user.uid).get().then(function (doc) {\r\n        setIsLiked(doc.exists);\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(value === 0) init();\r\n    getLiked();\r\n  }, [value, props.user])\r\n  \r\n  async function upViews() {\r\n    await ref.get().then(function (doc) {\r\n      var views = doc.data().views;\r\n      \r\n      if(views === undefined) \r\n        views = 1;\r\n      else\r\n        views++;\r\n      \r\n      ref.update({ views });\r\n    })\r\n  }\r\n\r\n  async function onWriteComment() {\r\n    if(myComment === '') return;\r\n  \r\n    if(delay) {\r\n      alert('3초 이내 작성/삭제 가 불가능합니다.'); return;\r\n    } else {\r\n      setDelay(true); setTimeout(() => setDelay(false), 3000);\r\n    }\r\n\r\n    const commentID = uuid()\r\n    const comment = {\r\n      uid: props.user.uid,\r\n      name: props.user.nickname,\r\n      image: props.user.photoURL,\r\n      content: myComment, \r\n      createdAt: Date.now()\r\n    };\r\n\r\n    setComments([{\r\n      id: commentID, ...comment\r\n    }, ...comments]);\r\n    setMyComment('');\r\n\r\n    await ref.get().then(function (doc) {\r\n      var commentsCount = doc.data().commentsCount;\r\n      var v = video;\r\n\r\n      if(commentsCount === undefined) \r\n        commentsCount = 1;\r\n      else\r\n        commentsCount++;\r\n\r\n      v.commentsCount = commentsCount;\r\n      setVideo(v);\r\n      ref.update({ commentsCount })\r\n    })\r\n    await ref.collection('comments').doc(commentID).set({...comment});\r\n  }\r\n\r\n  async function onDeleteComment(id) {\r\n    if(delay) {\r\n      alert('3초 이내 작성/삭제 가 불가능합니다.'); return;\r\n    } else {\r\n      setDelay(true); setTimeout(() => setDelay(false), 3000);\r\n    }\r\n    \r\n    var flag = true;\r\n    var array = [];\r\n\r\n    for(var i=0; i<comments.length; i++) {\r\n      if(id !== comments[i].id) {\r\n        array.push(comments[i]);\r\n      } else {\r\n        flag = false;\r\n      }\r\n    }\r\n\r\n    if(flag) return;\r\n    setComments(array);\r\n\r\n    await ref.get().then(function (doc) {\r\n      if(!doc.exists) return;\r\n\r\n      var commentsCount = doc.data().commentsCount - 1;\r\n      var v = video; v.commentsCount = commentsCount;\r\n\r\n      ref.update({ commentsCount })\r\n      setVideo(v);\r\n    })\r\n    await ref.collection('comments').doc(id).delete();\r\n\r\n    setComments(array);    \r\n  }\r\n\r\n  async function getMoreComments() {\r\n    if(delay) {\r\n      alert('3초 이내 재작동이 불가능합니다.'); return;\r\n    } else {\r\n      setDelay(true); setTimeout(() => setDelay(false), 3000);\r\n    }\r\n\r\n    var array = comments.slice();\r\n    \r\n    await ref.collection('comments').orderBy('createdAt', 'desc')\r\n            .startAfter(comments[comments.length-1].createdAt).limit(10)\r\n            .get().then(function (snapshot) {\r\n              snapshot.forEach(function (data) {\r\n                array.push({\r\n                  ...data.data(),\r\n                  id: data.id\r\n                })\r\n              })\r\n\r\n              if(array.length === video.commentsCount) setMore(false);\r\n              setComments(array);\r\n            })\r\n    \r\n  }\r\n\r\n  return (\r\n    <Container key='video'>\r\n      {loaded ? <>\r\n        <Box flex='0.6'>    \r\n          <IframeBox>\r\n            <Iframe \r\n              src={`https://www.youtube.com/embed/${vid}?autoplay=1`}\r\n              title=\"YouTube video player\" \r\n              frameBorder=\"0\" \r\n              allow=\"\r\n                accelerometer; autoplay; clipboard-write; \r\n                encrypted-media; gyroscope; picture-in-picture\" \r\n              allowFullScreen />\r\n          </IframeBox>\r\n\r\n          <SongTitle>{video.song}</SongTitle>\r\n\r\n          <ViewsAndLikes \r\n            video={video} \r\n            singer={singer}\r\n            user={props.user}\r\n            isLiked={isLiked}\r\n            setIsLiked={setIsLiked}\r\n            setVideo={setVideo}\r\n          />\r\n        </Box>\r\n\r\n        <Box flex='0.4'>\r\n          <div>\r\n            {props.user ? \r\n              <WriteComment>\r\n                <Box flex='0.8' style={{padding:'10px'}}>\r\n                  <CommentBox value={myComment} onChange={(e) => setMyComment(e.target.value)}/>\r\n                </Box>\r\n                <Box flex='0.2' style={{padding:'10px'}}>\r\n                  <Button onClick={() => onWriteComment()}>\r\n                    댓글입력\r\n                  </Button>\r\n                </Box>\r\n              </WriteComment> \r\n              : <>\r\n              <Box flex='1' style={{border:'1px solid lightgrey'}}>\r\n                로그인 후 댓글 작성 가능\r\n              </Box>\r\n            </>}\r\n          </div>\r\n\r\n          <div style={{marginBottom:'10px'}}>댓글 {video.commentsCount}개</div>\r\n          <div style={{height:'60vh', overflowY:'scroll'}}>\r\n            {comments.length === 0 ? <>댓글이 없습니다.</> : <>\r\n              {comments.map((comment) => \r\n                <Comment key={comment.id} \r\n                        user={props.user} \r\n                        comment={comment}\r\n                        onDeleteComment={onDeleteComment}\r\n                        />\r\n              )}\r\n              {more &&\r\n                <MoreCommentsButton onClick={() => getMoreComments()}>더 보기</MoreCommentsButton>\r\n              }\r\n            </>}\r\n          </div>\r\n        </Box>\r\n      </> : <><Loading /></>}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Video\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  height: 100%;\r\n  background-color: #f9f9f9;\r\n  padding: 0 10px;\r\n`\r\nconst Box = styled.div`\r\n  flex: ${(props) => props.flex || 1};\r\n  padding: 10px;\r\n`\r\nconst IframeBox = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  padding-bottom: 56.26%;\r\n`\r\nconst Iframe = styled.iframe`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\nconst SongTitle = styled.h2`\r\n  padding-left: 10px;\r\n`\r\nconst WriteComment = styled.div`\r\n  display: flex;\r\n`\r\nconst CommentBox = styled.textarea`\r\n  width: 100%;\r\n  height: 100px;\r\n  resize: none;\r\n  padding: 0;\r\n  margin: 0;\r\n`\r\nconst Button = styled.button`\r\n  width: 100%;\r\n  height: 100px;\r\n  padding: 0;\r\n  margin: 0;\r\n`\r\nconst MoreCommentsButton = styled.button`\r\n  width: 100%;\r\n  height: 50px;\r\n  margin-top: 10px;\r\n`","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\video\\ViewsAndLikes.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\func.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\video\\Comment.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\hot\\Hot.js",["267","268","269","270"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { storeService } from \"src/fbase\";\r\nimport VideoCard from './VideoCard';\r\nimport Loading from 'src/components/effect/Loading';\r\n\r\nfunction Hot() {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [hotVideoByLike, setHotVideoByLike] = useState([]);\r\n  const [hotVideoByView, setHotVideoByView] = useState([]);\r\n\r\n  async function getHotVideos() {\r\n    const ref = storeService.collection('videos');\r\n\r\n    var array = [];\r\n\r\n    await ref.where('likes', '>=', 1).orderBy('likes', 'desc').limit(10).get()\r\n      .then(function (snapshot) {\r\n        var index = 1;\r\n        snapshot.forEach(function(doc) {\r\n          array.push({\r\n            ...doc.data(),\r\n            id: doc.id,\r\n            index: index++\r\n          })\r\n        })\r\n        \r\n      })\r\n\r\n    for(var i=0; i<array.length; i++) {\r\n      var singer = '';\r\n\r\n      await storeService.collection('videos').doc(array[i].id)\r\n        .collection('singer').get().then(function (p) {\r\n          p.forEach(function(person) {\r\n            if(singer === '') singer = person.data().name;\r\n            else singer = singer + ', ' + person.data().name;\r\n          })\r\n        })\r\n      \r\n      array[i].singer = singer;\r\n    }\r\n\r\n    setHotVideoByLike(array); array = [];\r\n\r\n    await ref.where('views', '>=', 1).orderBy('views', 'desc').limit(10).get()\r\n      .then(function (snapshot) {\r\n        var index = 1;\r\n        snapshot.forEach(function(doc) {\r\n          array.push({\r\n            ...doc.data(),\r\n            id: doc.id,\r\n            index: index++,\r\n          }) \r\n        })\r\n        \r\n      })\r\n    \r\n    for(var i=0; i<array.length; i++) {\r\n      var singer = '';\r\n  \r\n      await storeService.collection('videos').doc(array[i].id)\r\n        .collection('singer').get().then(function (p) {\r\n          p.forEach(function(person) {\r\n            if(singer === '') singer = person.data().name;\r\n            else singer = singer + ', ' + person.data().name;\r\n          })\r\n      })\r\n       \r\n      array[i].singer = singer;\r\n    }\r\n\r\n    setHotVideoByView(array); setLoaded(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getHotVideos(); \r\n  }, [])\r\n\r\n  return (\r\n    <>{loaded ?\r\n      <Container>\r\n        <Box flex='0.5'>\r\n          <Title>좋아요</Title>\r\n          {hotVideoByLike &&\r\n            hotVideoByLike.map((v) => <VideoCard key={v.id} video={v} />)\r\n          }\r\n        </Box>\r\n\r\n        <Box flex='0.5'>\r\n          <Title>조회수</Title>\r\n          {hotVideoByView &&\r\n            hotVideoByView.map((v) => <VideoCard key={v.id} video={v} />)\r\n          }\r\n        </Box>\r\n      </Container>\r\n    :<>\r\n      <Loading />\r\n    </>}</>\r\n  )\r\n}\r\n\r\nexport default Hot\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  height: 100%;\r\n  background-color: #f9f9f9;\r\n  padding: 0 10px;\r\n`\r\nconst Box = styled.div`\r\n  flex: ${(props) => props.flex || 1};\r\n  padding: 10px;\r\n`\r\nconst Title = styled.h2`\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n`","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\hot\\VideoCard.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\like\\Like.js",["271","272","273","274","275","276","277"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { storeService } from \"src/fbase\";\r\n\r\nimport LikeVideo from './LikeVideo';\r\nimport Loading from 'src/components/effect/Loading';\r\nimport LikePeople from './LikePeople';\r\n\r\nfunction Like(props) {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [videos, setVideos] = useState([]);\r\n  const [people, setPeople] = useState([]);\r\n\r\n  const [more, setMore] = useState(true);\r\n  const [morePeople, setMorePeople] = useState(true);\r\n  const [delay, setDelay] = useState(false);\r\n\r\n  async function getVideos() {\r\n    var array = [];\r\n\r\n    const ref = storeService.collection('users').doc(props.user.uid);\r\n    const vref = storeService.collection('videos');\r\n\r\n    await ref.collection('likedVideos').orderBy('liked', 'desc').limit(10).get()\r\n      .then(function (snapshot) {\r\n        snapshot.forEach(function(doc) {\r\n          array.push({\r\n            ...doc.data(), \r\n            id: doc.id,\r\n          })\r\n        })\r\n      })\r\n    \r\n    for(var i=0; i<array.length; i++) {\r\n      var singer = '';  var data;\r\n    \r\n      await vref.doc(array[i].id).collection('singer').get().then(function (p) {\r\n        p.forEach(function(person) {\r\n          if(singer === '') singer = person.data().name;\r\n          else singer = singer + ', ' + person.data().name;\r\n        })\r\n      })\r\n\r\n      await vref.doc(array[i].id).get().then(function(d) {\r\n        data = d.data();\r\n      });\r\n       \r\n      array[i].singer = singer;\r\n      array[i] = {...array[i], ...data}\r\n    }\r\n    \r\n    if(array.length < 10) setMore(false);\r\n    setVideos(array); \r\n  }\r\n\r\n  async function getPeople() {\r\n    var array = [];\r\n\r\n    const ref = storeService.collection('users').doc(props.user.uid);\r\n    const pref = storeService.collection('people');\r\n\r\n    await ref.collection('likedPeople').orderBy('liked', 'desc').limit(10).get()\r\n      .then(function (snapshot) {\r\n        snapshot.forEach(function(doc) {\r\n          array.push({\r\n            ...doc.data(), \r\n            id: doc.id,\r\n          })\r\n        })\r\n      })\r\n\r\n    for(var i=0; i<array.length; i++) {\r\n      await pref.doc(array[i].id).get().then(function (p) {\r\n        array[i] = {...array[i], ...p.data()}\r\n      })\r\n    }\r\n    \r\n    if(array.length < 10) setMorePeople(false);\r\n    setPeople(array); \r\n  }\r\n\r\n  async function init() {\r\n    await getVideos(); \r\n    await getPeople(); \r\n    setLoaded(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(props.user) init(); \r\n  }, [props.user])\r\n\r\n  const getMoreVideos = async () => {\r\n    if(delay) {\r\n      return;\r\n    } else {\r\n      setDelay(true); setTimeout(() => setDelay(false), 1000);\r\n    }\r\n    \r\n    var array = [];\r\n\r\n    const ref = storeService.collection('users').doc(props.user.uid);\r\n    const vref = storeService.collection('videos');\r\n\r\n    await ref.collection('likedVideos').orderBy('liked', 'desc')\r\n      .startAfter(videos[videos.length-1].liked).limit(10)\r\n      .get().then(function (snapshot) {\r\n        snapshot.forEach(function (doc) {\r\n          array.push({\r\n            ...doc.data(),\r\n            id: doc.id,\r\n          })\r\n        })\r\n        \r\n        if(snapshot.size === 0) setMore(false);\r\n      })\r\n\r\n    for(var i=0; i<array.length; i++) {\r\n      var singer = '';  var data;\r\n      \r\n      await vref.doc(array[i].id).collection('singer').get().then(function (p) {\r\n        p.forEach(function(person) {\r\n          if(singer === '') singer = person.data().name;\r\n          else singer = singer + ', ' + person.data().name;\r\n        })\r\n      })\r\n  \r\n      await vref.doc(array[i].id).get().then(function(d) {\r\n        data = d.data();\r\n      });\r\n         \r\n      array[i].singer = singer;\r\n      array[i] = {...array[i], ...data}\r\n    }\r\n\r\n    setVideos([...videos, ...array]);\r\n  }\r\n\r\n  const getMorePeople = async () => {\r\n    if(delay) {\r\n      return;\r\n    } else {\r\n      setDelay(true); setTimeout(() => setDelay(false), 1000);\r\n    }\r\n    \r\n    var array = [];\r\n\r\n    const ref = storeService.collection('users').doc(props.user.uid);\r\n    const pref = storeService.collection('people');\r\n\r\n    await ref.collection('likedPeople').orderBy('liked', 'desc')\r\n      .startAfter(people[people.length-1].liked).limit(10)\r\n      .get().then(function (snapshot) {\r\n        snapshot.forEach(function (doc) {\r\n          array.push({\r\n            ...doc.data(),\r\n            id: doc.id,\r\n          })\r\n        })\r\n        \r\n        if(snapshot.size === 0) setMorePeople(false);\r\n      })\r\n\r\n    for(var i=0; i<array.length; i++) {\r\n      await pref.doc(array[i].id).get().then(function (p) {\r\n        array[i] = {...array[i], ...p.data()}\r\n      })\r\n    }\r\n\r\n    setPeople([...people, ...array]);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {loaded ? <>\r\n        {people && <>\r\n          <Title>좋아요 누른 인물</Title>\r\n\r\n          <Videos>\r\n            {people.map((person) => \r\n              <LikePeople key={person.id} person={person} />)}\r\n          </Videos>\r\n\r\n          {morePeople &&\r\n            <div style={{textAlign:'center', width:'100%'}}>\r\n              <Button onClick={getMorePeople}>더 보기</Button>\r\n            </div>\r\n          }\r\n        </>}\r\n\r\n        {videos && <>\r\n          <Title>좋아요 누른 영상</Title>\r\n\r\n          <Videos>\r\n            {videos.map((video) => \r\n              <LikeVideo key={video.id} video={video} />)}\r\n          </Videos>\r\n          \r\n          {more &&\r\n            <div style={{textAlign:'center', width:'100%'}}>\r\n              <Button onClick={getMoreVideos}>더 보기</Button>\r\n            </div>\r\n          }\r\n        </>}\r\n      </> : <>\r\n        <Loading />\r\n      </>}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Like\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  background-color: #f9f9f9;\r\n  padding: 0px 10px;\r\n  padding-bottom: 0;\r\n`\r\nconst Title = styled.h2`\r\n  text-align: center;\r\n  padding-top: 20px;\r\n`\r\nconst Videos = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`\r\nconst Button = styled.button`\r\n  width: 80%;\r\n  height: 50px;\r\n`","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\like\\LikeVideo.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\guestbook\\GuestBook.js",["278"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { storeService } from \"src/fbase\";\r\n\r\nimport Write from './Write';\r\nimport Comment from './Comment';\r\nimport Loading from 'src/components/effect/Loading';\r\n\r\nfunction GuestBook(props) {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const [isMore, setIsMore] = useState(true);\r\n  const [delay, setDelay] = useState(false);\r\n  const [value, setValue] = useState(0);\r\n\r\n  async function getComments() {\r\n    var array = [];\r\n\r\n    await storeService.collection('visits')\r\n      .orderBy('createdAt','desc').limit(5).get().then(function (snapshot) {\r\n        snapshot.forEach(function(doc) {\r\n          array.push({\r\n            ...doc.data(),\r\n            id: doc.id\r\n          })\r\n        })\r\n        if(array.length < 5) setIsMore(false);\r\n        setComments(array); setLoaded(true); setValue(value + 1);\r\n      })\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(value === 0) {\r\n      getComments();\r\n    }\r\n  }, [value])\r\n\r\n  function addComment(comment) {\r\n    setComments([comment, ...comments]);\r\n  }\r\n\r\n  function deleteComment(id) {\r\n    var array = [];\r\n    for(var i=0; i<comments.length; i++) {\r\n      if(comments[i].id !== id)\r\n        array.push(comments[i]);\r\n    }\r\n    setComments(array);\r\n  }\r\n  \r\n  async function moreGetComments() {\r\n    if(delay) {\r\n      return;\r\n    } else {\r\n      setDelay(true); setTimeout(() => setDelay(false), 1000);\r\n    }\r\n\r\n    var array = [];\r\n\r\n    await storeService.collection('visits').orderBy('createdAt', 'desc')\r\n            .startAfter(comments[comments.length-1].createdAt).limit(5)\r\n            .get().then(function (snapshot) {\r\n              snapshot.forEach(function (data) {\r\n                array.push({\r\n                  ...data.data(),\r\n                  id: data.id\r\n                })\r\n              })\r\n\r\n              if(array.length === 0) {\r\n                setIsMore(false);\r\n              } else {\r\n                setComments([...comments, ...array]);\r\n              }\r\n              setValue(value + 1);\r\n            })\r\n  }\r\n\r\n  return (\r\n    <Container id='guestbook'>\r\n    {loaded ? <>\r\n      <Content>\r\n        <Write user={props.user} addComment={addComment}/>\r\n\r\n        <Content>\r\n        {comments && \r\n          comments.map((comment) => \r\n            <Comment \r\n              key={comment.id} \r\n              comment={comment} \r\n              user={props.user}\r\n              deleteComment={deleteComment}/>)\r\n        }\r\n        </Content>\r\n        \r\n        {isMore &&\r\n        <div style={{textAlign:'center'}}>\r\n          <button style={{width:'50%', height:'50px', margin:'20px auto'}} \r\n                  onClick={moreGetComments}>더 보기</button>\r\n        </div>\r\n        }\r\n      </Content>\r\n    </> : <>\r\n      <Loading />\r\n    </>}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default GuestBook\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  background-color: #f9f9f9;\r\n  padding: 0px 10px;\r\n  padding-bottom: 0;\r\n`\r\nconst Content = styled.div`\r\n  width: 80%;\r\n  margin: auto;\r\n`\r\n","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\guestbook\\Write.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\guestbook\\Comment.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\search\\Search.js",["279","280","281","282","283"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { storeService } from \"src/fbase\";\r\n\r\nimport PersonRow from './PersonRow';\r\nimport VideoRow from './VideoRow';\r\nimport Loading from 'src/components/effect/Loading';\r\n\r\nfunction Search() {\r\n  const { searchContent } = useParams();\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [search, setSearch] = useState([]);\r\n\r\n  async function getPerson(str) {\r\n    const sum = str.length === 1 ? str[0] : str[0] + ' ' + str[1];\r\n    var array = [];\r\n\r\n    const pref = storeService.collection('people');\r\n    const vref = storeService.collection('videos');\r\n\r\n    await pref.where('name', '==', `${str[0]}`).orderBy('likes', 'desc')\r\n      .limit(5).get().then(function(snapshot) {\r\n        snapshot.forEach(function(doc){\r\n          array.push({\r\n            ...doc.data(),\r\n            id: doc.id,\r\n            isPerson: true\r\n          })\r\n        })\r\n      })\r\n\r\n    if(array.length === 0) {\r\n      await vref.where('song', '>=', `${sum}`)\r\n        .limit(10).get().then(function(snapshot) {\r\n          snapshot.forEach( function(doc){\r\n            array.push({\r\n              ...doc.data(),\r\n              id: doc.id,\r\n              isPerson: false\r\n            })\r\n          })\r\n        })\r\n    } else {\r\n      var array2 = [];\r\n      const length = array.length;\r\n\r\n      for(var i=0; i<length; i++) {\r\n        await pref.doc(array[i].id).collection('videos')\r\n          .where('song', '>=', `${str.length === 1 ? '' : str[1]}`)\r\n          .limit(5).get().then(function(snapshot) {\r\n            snapshot.forEach(function(doc){\r\n              array2.push(doc.id);\r\n            })\r\n          })\r\n      }\r\n\r\n      for(var i=0; i<array2.length; i++) {\r\n        await vref.doc(array2[i]).get().then(function (v) {\r\n          array.push({\r\n            ...v.data(),\r\n            id: array2[i],\r\n            isPerson: false\r\n          })\r\n        })\r\n      }\r\n    }\r\n\r\n    for(var i=0; i<array.length; i++) {\r\n      if(array[i].isPerson) continue;\r\n      var singer = '';\r\n  \r\n      await pref.doc(array[i].id).collection('singer').get().then(function (p) {\r\n        p.forEach(function(person) {\r\n          if(singer === '') singer = person.data().name;\r\n          else singer = singer + ', ' + person.data().name;\r\n        })\r\n      })\r\n         \r\n      array[i].singer = singer;\r\n    }\r\n\r\n    setSearch(array);\r\n  }\r\n\r\n  async function getData() {\r\n    const split = searchContent.split('+');\r\n    \r\n    if(split.length === 0) {\r\n      alert('검색 키워드가 잘못되었습니다.'); return;\r\n    } else if(split.length === 1) {\r\n      await getPerson([split[0]]);\r\n    } else {\r\n      await getPerson([split[0], split[1]]);\r\n    }\r\n\r\n    setLoaded(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [])\r\n\r\n  return (\r\n    <Container>\r\n      {loaded ?\r\n      <Content>\r\n        {search && search.map((data) => \r\n          data.isPerson ? \r\n            <PersonRow key={data.id} person={data} />\r\n          :\r\n            <VideoRow key={data.id} video={data} />\r\n        )}\r\n      </Content>\r\n      : <>\r\n        <Loading />\r\n      </>}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Search\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  background-color: #f9f9f9;\r\n  padding: 0px 10px;\r\n  padding-bottom: 0;\r\n`\r\nconst Content = styled.div`\r\n  width: 80%;\r\n  margin: auto;\r\n  border: 1px solid grey;\r\n`","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\search\\PersonRow.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\search\\VideoRow.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\person\\Person.js",["284","285"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { storeService } from \"src/fbase\";\r\n\r\nimport PersonInfo from './PersonInfo';\r\nimport TvProgram from './TvProgram';\r\nimport Video from './Video';\r\nimport Loading from 'src/components/effect/Loading';\r\n\r\nfunction Person(props) {\r\n  const { pid } = useParams();\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [person, setPerson] = useState(null);\r\n  const [tvPrograms, setTvPrograms] = useState([]);\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  async function getData() {\r\n    const pref = storeService.collection('people').doc(pid);\r\n    const tref = storeService.collection('tv-programs');\r\n    const vref = storeService.collection('videos');\r\n\r\n    var array = [];\r\n    var tvArray = [];\r\n    var videoArray = [];\r\n\r\n    await pref.get().then(function (doc) {\r\n      setPerson({\r\n        id: pid,\r\n        ...doc.data()\r\n      });\r\n    })\r\n\r\n    if(props.user !== null) {\r\n      await pref.collection('liked').doc(props.user.uid).get().then(function (doc) {\r\n        setIsLiked(doc.exists);\r\n      })\r\n    }\r\n\r\n    await pref.collection('tv-programs').get().then(function (snapshot) {\r\n      snapshot.forEach(function (doc) {\r\n        array.push(doc.id);\r\n      })\r\n    })\r\n\r\n    for(var i=0; i<array.length; i++) {\r\n      await tref.doc(array[i]).get().then(function (doc) {\r\n        tvArray.push({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        })\r\n      })\r\n    }\r\n\r\n    array = [];\r\n\r\n    await pref.collection('videos').orderBy('createdAt', 'desc').limit(20)\r\n      .get().then(function (snapshot) {\r\n        snapshot.forEach(function (doc) {\r\n          array.push(doc.id);\r\n        })\r\n      })\r\n\r\n    for(var i=0; i<array.length; i++) {\r\n      await vref.doc(array[i]).get().then(function (doc) {\r\n        videoArray.push({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        })\r\n      })\r\n    }\r\n\r\n    setTvPrograms(tvArray); setVideos(videoArray);\r\n\r\n    setLoaded(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n    {loaded ? person && <>\r\n      <Container>\r\n        <PersonInfo \r\n          user={props.user} person={person} setPerson={setPerson}\r\n          isLiked={isLiked} setIsLiked={setIsLiked}\r\n        />\r\n\r\n        {tvPrograms && <Box>\r\n          <Title>\r\n            출연 방송\r\n          </Title>\r\n          <Content>\r\n            {tvPrograms.map((tvProgram) =>\r\n              <TvProgram key={tvProgram.id} tvProgram={tvProgram}/> )}\r\n          </Content>\r\n        </Box>}\r\n        \r\n        {videos && <Box>\r\n          <Title>\r\n            최근 영상\r\n          </Title>\r\n          <Content>\r\n            {videos.map((video) =>\r\n              <Video key={video.id} video={video}/> )}\r\n          </Content>\r\n        </Box>}\r\n      </Container>\r\n    </> : <>\r\n      <Loading />\r\n    </>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Person\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  background-color: #f9f9f9;\r\n  padding: 0px 10px;\r\n  padding-bottom: 0;\r\n`\r\nconst Box = styled.div`\r\n  width: 100%;\r\n`\r\nconst Title = styled.h2`\r\n  text-align: center;\r\n  padding-top: 20px;\r\n`\r\nconst Content = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\person\\PersonInfo.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\person\\TvProgram.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\person\\Video.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\effect\\Loading.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\like\\LikePeople.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\users\\Users.js",["286","287"],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\users\\User.js",["288","289"],{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","severity":1,"message":"295","line":58,"column":72,"nodeType":"296","messageId":"297","endLine":61,"endColumn":8},{"ruleId":"298","severity":1,"message":"299","line":80,"column":6,"nodeType":"300","endLine":80,"endColumn":13,"suggestions":"301"},{"ruleId":"294","severity":1,"message":"302","line":99,"column":72,"nodeType":"296","messageId":"297","endLine":104,"endColumn":10},{"ruleId":"294","severity":1,"message":"302","line":128,"column":70,"nodeType":"296","messageId":"297","endLine":133,"endColumn":8},{"ruleId":"303","severity":1,"message":"304","line":257,"column":7,"nodeType":"305","messageId":"306","endLine":257,"endColumn":23},{"ruleId":"298","severity":1,"message":"307","line":34,"column":6,"nodeType":"300","endLine":34,"endColumn":8,"suggestions":"308"},{"ruleId":"294","severity":1,"message":"295","line":48,"column":75,"nodeType":"296","messageId":"297","endLine":56,"endColumn":8},{"ruleId":"298","severity":1,"message":"299","line":85,"column":27,"nodeType":"300","endLine":85,"endColumn":29,"suggestions":"309"},{"ruleId":"294","severity":1,"message":"302","line":147,"column":30,"nodeType":"310","messageId":"297","endLine":147,"endColumn":64},{"ruleId":"294","severity":1,"message":"302","line":149,"column":28,"nodeType":"310","messageId":"297","endLine":149,"endColumn":62},{"ruleId":"311","severity":1,"message":"312","line":162,"column":13,"nodeType":"305","messageId":"313","endLine":162,"endColumn":14},{"ruleId":"311","severity":1,"message":"312","line":174,"column":13,"nodeType":"305","messageId":"313","endLine":174,"endColumn":14},{"ruleId":"294","severity":1,"message":"314","line":47,"column":66,"nodeType":"296","messageId":"297","endLine":52,"endColumn":8},{"ruleId":"298","severity":1,"message":"299","line":68,"column":6,"nodeType":"300","endLine":68,"endColumn":8,"suggestions":"315"},{"ruleId":"298","severity":1,"message":"316","line":77,"column":6,"nodeType":"300","endLine":77,"endColumn":25,"suggestions":"317"},{"ruleId":"294","severity":1,"message":"314","line":36,"column":42,"nodeType":"296","messageId":"297","endLine":41,"endColumn":10},{"ruleId":"311","severity":1,"message":"312","line":61,"column":13,"nodeType":"305","messageId":"313","endLine":61,"endColumn":14},{"ruleId":"311","severity":1,"message":"318","line":62,"column":11,"nodeType":"305","messageId":"313","endLine":62,"endColumn":17},{"ruleId":"294","severity":1,"message":"314","line":65,"column":42,"nodeType":"296","messageId":"297","endLine":70,"endColumn":8},{"ruleId":"294","severity":1,"message":"314","line":39,"column":67,"nodeType":"296","messageId":"297","endLine":44,"endColumn":8},{"ruleId":"294","severity":1,"message":"319","line":46,"column":46,"nodeType":"296","messageId":"297","endLine":48,"endColumn":8},{"ruleId":"294","severity":1,"message":"295","line":75,"column":46,"nodeType":"296","messageId":"297","endLine":77,"endColumn":8},{"ruleId":"298","severity":1,"message":"299","line":92,"column":6,"nodeType":"300","endLine":92,"endColumn":18,"suggestions":"320"},{"ruleId":"294","severity":1,"message":"314","line":122,"column":67,"nodeType":"296","messageId":"297","endLine":127,"endColumn":8},{"ruleId":"294","severity":1,"message":"319","line":129,"column":46,"nodeType":"296","messageId":"297","endLine":131,"endColumn":8},{"ruleId":"294","severity":1,"message":"295","line":166,"column":46,"nodeType":"296","messageId":"297","endLine":168,"endColumn":8},{"ruleId":"298","severity":1,"message":"321","line":40,"column":6,"nodeType":"300","endLine":40,"endColumn":13,"suggestions":"322"},{"ruleId":"311","severity":1,"message":"312","line":61,"column":15,"nodeType":"305","messageId":"313","endLine":61,"endColumn":16},{"ruleId":"294","severity":1,"message":"302","line":62,"column":46,"nodeType":"296","messageId":"297","endLine":68,"endColumn":10},{"ruleId":"311","severity":1,"message":"312","line":72,"column":13,"nodeType":"305","messageId":"313","endLine":72,"endColumn":14},{"ruleId":"294","severity":1,"message":"314","line":76,"column":67,"nodeType":"296","messageId":"297","endLine":81,"endColumn":8},{"ruleId":"298","severity":1,"message":"307","line":105,"column":6,"nodeType":"300","endLine":105,"endColumn":8,"suggestions":"323"},{"ruleId":"311","severity":1,"message":"312","line":68,"column":13,"nodeType":"305","messageId":"313","endLine":68,"endColumn":14},{"ruleId":"298","severity":1,"message":"307","line":84,"column":6,"nodeType":"300","endLine":84,"endColumn":8,"suggestions":"324"},{"ruleId":"298","severity":1,"message":"325","line":49,"column":6,"nodeType":"300","endLine":49,"endColumn":22,"suggestions":"326"},{"ruleId":"327","severity":1,"message":"328","line":78,"column":29,"nodeType":"329","messageId":"330","endLine":78,"endColumn":31},{"ruleId":"303","severity":1,"message":"331","line":4,"column":18,"nodeType":"305","messageId":"306","endLine":4,"endColumn":21},{"ruleId":"298","severity":1,"message":"332","line":41,"column":6,"nodeType":"300","endLine":41,"endColumn":10,"suggestions":"333"},"no-native-reassign",["334"],"no-negated-in-lhs",["335"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i', 'i'.","FunctionExpression","unsafeRefs","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.","ArrayExpression",["336"],"Function declared in a loop contains unsafe references to variable(s) 'i'.","no-unused-vars","'StyledVscLoading' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["337"],["338"],"ArrowFunctionExpression","no-redeclare","'i' is already defined.","redeclared","Function declared in a loop contains unsafe references to variable(s) 'singer', 'singer', 'singer', 'singer'.",["339"],"React Hook useEffect has missing dependencies: 'getLiked' and 'init'. Either include them or remove the dependency array.",["340"],"'singer' is already defined.","Function declared in a loop contains unsafe references to variable(s) 'data'.",["341"],"React Hook useEffect has a missing dependency: 'getComments'. Either include it or remove the dependency array.",["342"],["343"],["344"],"React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["345"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'css' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.",["346"],"no-global-assign","no-unsafe-negation",{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"351","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"349","fix":"360"},{"desc":"349","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},"Update the dependencies array to be: [init, value]",{"range":"366","text":"367"},"Update the dependencies array to be: [getData]",{"range":"368","text":"369"},"Update the dependencies array to be: [init]",{"range":"370","text":"371"},{"range":"372","text":"371"},"Update the dependencies array to be: [value, props.user, init, getLiked]",{"range":"373","text":"374"},"Update the dependencies array to be: [init, props.user]",{"range":"375","text":"376"},"Update the dependencies array to be: [getComments, value]",{"range":"377","text":"378"},{"range":"379","text":"369"},{"range":"380","text":"369"},"Update the dependencies array to be: [getUsers, startComponent]",{"range":"381","text":"382"},"Update the dependencies array to be: [getUserData, id]",{"range":"383","text":"384"},[2224,2231],"[init, value]",[809,811],"[getData]",[2495,2497],"[init]",[1802,1804],[2121,2140],"[value, props.user, init, getLiked]",[2527,2539],"[init, props.user]",[1063,1070],"[getComments, value]",[2839,2841],[2162,2164],[1316,1332],"[getUsers, startComponent]",[1284,1288],"[getUserData, id]"]