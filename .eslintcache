[{"C:\\workspace\\web\\v01-trot-tube\\src\\index.js":"1","C:\\workspace\\web\\v01-trot-tube\\src\\reportWebVitals.js":"2","C:\\workspace\\web\\v01-trot-tube\\src\\components\\people\\PersonRow.js":"3","C:\\workspace\\web\\v01-trot-tube\\src\\components\\search\\SearchVideos.js":"4","C:\\workspace\\web\\v01-trot-tube\\src\\components\\search\\VideoRow.js":"5","C:\\workspace\\web\\v01-trot-tube\\src\\components\\Router.js":"6","C:\\workspace\\web\\v01-trot-tube\\src\\routes\\Home.js":"7","C:\\workspace\\web\\v01-trot-tube\\src\\components\\App.js":"8","C:\\workspace\\web\\v01-trot-tube\\src\\FBase.js":"9","C:\\workspace\\web\\v01-trot-tube\\src\\fbase.js":"10","C:\\workspace\\web\\v01-trot-tube\\src\\routes\\Login.js":"11","C:\\workspace\\web\\v01-trot-tube\\src\\routes\\Admin.js":"12","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\header\\Header.js":"13","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\header\\UserIcon.js":"14","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\sidebar\\Sidebar.js":"15","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\sidebar\\SidebarRow.js":"16","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\user\\UserInfo.js":"17","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\user\\UserEdit.js":"18","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\tv-program\\TvProgram.js":"19","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\Main.js":"20","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\sidebar\\Sidebar.js":"21","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\TvProgramSlider.js":"22","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\sidebar\\ManagerBox.js":"23","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\sidebar\\Menu.js":"24","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\sidebar\\SidebarData.js":"25","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\sidebar\\SubMenu.js":"26","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\people\\People.js":"27","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\people\\PersonCard.js":"28","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\people\\Person.js":"29","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\TvPrograms.js":"30","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\TvProgram.js":"31","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\TvProgramAdd.js":"32","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\people\\PeopleAdd.js":"33","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\PeopleBox.js":"34","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\AddPeople.js":"35","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\main\\HomeContents.js":"36","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\main\\TvProgramSlider.js":"37","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\main\\RecentVideos.js":"38","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\tv-program\\AddVideo.js":"39","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\tv-program\\Videos.js":"40","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\video\\Video.js":"41","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\video\\ViewsAndLikes.js":"42","C:\\workspace\\web\\v01-trot-tube\\src\\func.js":"43","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\video\\Comment.js":"44","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\hot\\Hot.js":"45","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\hot\\VideoCard.js":"46","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\list\\List.js":"47","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\like\\Like.js":"48","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\like\\LikeVideo.js":"49"},{"size":511,"mtime":1612620199951,"results":"50","hashOfConfig":"51"},{"size":362,"mtime":499162500000,"results":"52","hashOfConfig":"51"},{"size":772,"mtime":1612426646014,"results":"53","hashOfConfig":"51"},{"size":1036,"mtime":1612433224646,"results":"54","hashOfConfig":"51"},{"size":828,"mtime":1612434906548,"results":"55","hashOfConfig":"51"},{"size":1443,"mtime":1618304356386,"results":"56","hashOfConfig":"51"},{"size":1290,"mtime":1618304435165,"results":"57","hashOfConfig":"51"},{"size":815,"mtime":1613479849048,"results":"58","hashOfConfig":"51"},{"size":537,"mtime":1612622698526,"results":"59","hashOfConfig":"51"},{"size":662,"mtime":1612785403836,"results":"60","hashOfConfig":"51"},{"size":2796,"mtime":1618231823567,"results":"61","hashOfConfig":"51"},{"size":1248,"mtime":1615624963846,"results":"62","hashOfConfig":"51"},{"size":2573,"mtime":1617614678572,"results":"63","hashOfConfig":"51"},{"size":2336,"mtime":1614323677230,"results":"64","hashOfConfig":"51"},{"size":1825,"mtime":1618304204381,"results":"65","hashOfConfig":"51"},{"size":960,"mtime":1617883649456,"results":"66","hashOfConfig":"51"},{"size":3260,"mtime":1614324311129,"results":"67","hashOfConfig":"51"},{"size":2469,"mtime":1614324298894,"results":"68","hashOfConfig":"51"},{"size":6508,"mtime":1617021910966,"results":"69","hashOfConfig":"51"},{"size":231,"mtime":1614324520944,"results":"70","hashOfConfig":"51"},{"size":760,"mtime":1614325725146,"results":"71","hashOfConfig":"51"},{"size":6599,"mtime":1614324532812,"results":"72","hashOfConfig":"51"},{"size":658,"mtime":1614324504161,"results":"73","hashOfConfig":"51"},{"size":618,"mtime":1614393393182,"results":"74","hashOfConfig":"51"},{"size":977,"mtime":1614592499756,"results":"75","hashOfConfig":"51"},{"size":1576,"mtime":1614324504208,"results":"76","hashOfConfig":"51"},{"size":2885,"mtime":1614606263490,"results":"77","hashOfConfig":"51"},{"size":656,"mtime":1614606025942,"results":"78","hashOfConfig":"51"},{"size":323,"mtime":1614584516256,"results":"79","hashOfConfig":"51"},{"size":4973,"mtime":1614596758448,"results":"80","hashOfConfig":"51"},{"size":5755,"mtime":1615740147017,"results":"81","hashOfConfig":"51"},{"size":4164,"mtime":1614596737659,"results":"82","hashOfConfig":"51"},{"size":4259,"mtime":1615120470770,"results":"83","hashOfConfig":"51"},{"size":13617,"mtime":1616841414715,"results":"84","hashOfConfig":"51"},{"size":3943,"mtime":1615737996722,"results":"85","hashOfConfig":"51"},{"size":2063,"mtime":1618230381776,"results":"86","hashOfConfig":"51"},{"size":1798,"mtime":1617021152690,"results":"87","hashOfConfig":"51"},{"size":1513,"mtime":1617886348697,"results":"88","hashOfConfig":"51"},{"size":4042,"mtime":1617021906122,"results":"89","hashOfConfig":"51"},{"size":3601,"mtime":1617021898273,"results":"90","hashOfConfig":"51"},{"size":8031,"mtime":1617625893777,"results":"91","hashOfConfig":"51"},{"size":2496,"mtime":1617625948865,"results":"92","hashOfConfig":"51"},{"size":1809,"mtime":1618066855134,"results":"93","hashOfConfig":"51"},{"size":1933,"mtime":1617886224353,"results":"94","hashOfConfig":"51"},{"size":2841,"mtime":1618068069808,"results":"95","hashOfConfig":"51"},{"size":1833,"mtime":1618066976023,"results":"96","hashOfConfig":"51"},{"size":122,"mtime":1618304377870,"results":"97","hashOfConfig":"51"},{"size":3647,"mtime":1618326192924,"results":"98","hashOfConfig":"51"},{"size":1169,"mtime":1618321314593,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1awrkgz",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"102"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"102"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"102"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"102"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\workspace\\web\\v01-trot-tube\\src\\index.js",[],["209","210"],"C:\\workspace\\web\\v01-trot-tube\\src\\reportWebVitals.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\people\\PersonRow.js",[],["211","212"],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\search\\SearchVideos.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\search\\VideoRow.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\Router.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\routes\\Home.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\App.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\FBase.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\fbase.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\routes\\Login.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\routes\\Admin.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\header\\Header.js",["213"],"import React, { useState } from 'react'\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { FiMenu, FiSearch } from 'react-icons/fi' \r\nimport { IoNotifications } from 'react-icons/io5'\r\n\r\nimport UserIcon from './UserIcon';\r\n\r\nfunction Header(props) {\r\n  const [inputSearch, setInputSearch] = useState('');\r\n\r\n  return (\r\n    <Container>\r\n      <ContainerLeft>\r\n        <FiMenuIcon \r\n          onClick={() => {\r\n            document.getElementById(\"sidebar\").style.left = \"0px\";\r\n          }} \r\n          size='24' />\r\n        <Link to=\"/\">\r\n          <Logo src=\"/images/logo-trottube.png\" />\r\n        </Link>\r\n      </ContainerLeft>\r\n\r\n      <ContainerInput>\r\n        <Input \r\n          type=\"text\" \r\n          placeholder=\"Search\" \r\n          value={inputSearch}\r\n          onChange={e => setInputSearch(e.target.value)}\r\n        />\r\n\r\n        <InputLink to={inputSearch && `/search/${inputSearch}`} >\r\n          <FiSearchIcon size=\"18\" />\r\n        </InputLink>\r\n      </ContainerInput>\r\n\r\n      <Icons>\r\n        {props.user ? (\r\n          <>\r\n            {/* <NotificationIcon size=\"24\"/> */}\r\n          </>\r\n        ) : null}\r\n        \r\n        <UserIcon user={props.user}/>\r\n      </Icons>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Header\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 20px 0 20px;\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 100;\r\n  background-color: white;\r\n`\r\nconst ContainerLeft = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\nconst Logo = styled.img`\r\n  height: 40px;\r\n  object-fit: contain;\r\n  padding: 20px;\r\n`\r\nconst FiMenuIcon = styled(FiMenu)`\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: red;\r\n  }\r\n`\r\nconst FiSearchIcon = styled(FiSearch)`\r\n  width: 100% !important;\r\n  height: 24px;\r\n  color: gray;\r\n`\r\nconst ContainerInput = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 40%;\r\n  border: 1px solid lightgray;\r\n`\r\nconst Input = styled.input`\r\n  flex: 1;\r\n  border: none;\r\n  height: 28px;\r\n\r\n  &:focus {\r\n    outline: 2px solid lightskyblue;\r\n  }  \r\n`\r\nconst InputLink = styled(Link)`\r\n  display: flex;\r\n  width: 50px !important;\r\n  height: 30px;\r\n  border-left: 1px solid lightgray;\r\n  align-items: center;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    background-color: darkgray;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: darkgray;\r\n  }\r\n`\r\nconst Icons = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\nconst NotificationIcon = styled(IoNotifications)`\r\n  margin-right: 10px;\r\n`","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\header\\UserIcon.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\sidebar\\Sidebar.js",["214","215","216"],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\sidebar\\SidebarRow.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\user\\UserInfo.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\user\\UserEdit.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\tv-program\\TvProgram.js",["217"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { storeService } from 'src/fbase'\r\n\r\nimport Avatar from '@material-ui/core/Avatar'\r\n\r\nimport Videos from './Videos';\r\nimport AddVideo from './AddVideo';\r\n\r\nfunction TvProgram(props) {\r\n  const { tpid } = useParams();\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [tvProgram, setTvProgram] = useState(null);\r\n  const [directories, setDirectories] = useState([]);\r\n  const [people, setPeople] = useState([]);\r\n  const [value, setValue] = useState(0);\r\n\r\n  const [person, setPerson] = useState(null);\r\n  const [videos, setVideos] = useState([]);\r\n  const [isMore, setIsMore] = useState(true);\r\n\r\n  async function getTvProgram() {\r\n    await storeService.collection('tv-programs').doc(tpid).get().then(function (doc) {\r\n      setTvProgram(doc.data());\r\n    })\r\n  }\r\n\r\n  async function getDirectories() {\r\n    var dir = []; var pp = [];\r\n    const dirRef = storeService.collection('tv-programs').doc(tpid);\r\n\r\n    await dirRef.collection('directories').get().then(function (snapshot) {\r\n      snapshot.forEach(doc => dir.push({\r\n        ...doc.data(), id: doc.id\r\n      }));\r\n    });\r\n\r\n    await dirRef.collection('people').get().then(function (snapshot) {\r\n      var index = 0;\r\n      snapshot.forEach(async function (doc) {\r\n        await storeService.collection('people').doc(doc.id).get().then(function (person) {\r\n          pp.push({\r\n            id: doc.id,\r\n            dir: doc.data().dir, \r\n            name: person.data().name,\r\n            image: person.data().image,\r\n            index: index++\r\n          })      \r\n        }) \r\n      });\r\n    });\r\n\r\n    setDirectories(dir.sort(function (a,b) {\r\n      return a.index - b.index;\r\n    })); setPeople(pp);\r\n  }\r\n\r\n  function init() {\r\n    getTvProgram(); \r\n    getDirectories();\r\n    setValue(value + 1);\r\n    setTimeout(() => setLoaded(true), 1500);  \r\n  }\r\n\r\n  useEffect(() => {\r\n    if(value === 0) {\r\n      init();\r\n    }\r\n  }, [value])\r\n\r\n  async function getVideosOfPerson(index) {\r\n    if(person === null || (index !== person.index)) {\r\n      setPerson(people[index]); setIsMore(true);\r\n\r\n      await storeService.collection('people').doc(people[index].id)\r\n        .collection('videos').where('tpid', '==', tpid).orderBy('createdAt', 'desc').limit(10)\r\n        .get().then(function (snapshot) {\r\n          if(snapshot.empty || snapshot.size % 10 !== 0) \r\n            setIsMore(false);\r\n\r\n          var arr = [];\r\n          snapshot.forEach(async function(doc) {\r\n            await storeService.collection('videos').doc(doc.id).get().then(function (video) {\r\n              arr.push({\r\n                ...video.data(),\r\n                id: doc.id\r\n              })      \r\n            }) \r\n          })\r\n          setVideos(arr);\r\n        })\r\n      setTimeout(() => setValue(value + 1), 500);\r\n    }\r\n    document.getElementById(\"videos\").style.right = \"0\";\r\n  }\r\n\r\n  async function getMoreVideos() {\r\n    await storeService.collection('people').doc(person.id)\r\n      .collection('videos').where('tpid', '==', tpid)\r\n      .orderBy('createdAt', 'desc').startAfter(videos[videos.length-1].createdAt).limit(10)\r\n      .get().then(function (snapshot) {\r\n        if(snapshot.empty || snapshot.size % 10 !== 0) \r\n          setIsMore(false);\r\n\r\n        var arr = videos.slice();\r\n        snapshot.forEach(async function(doc) {\r\n          await storeService.collection('videos').doc(doc.id).get().then(function (video) {\r\n            arr.push({\r\n              ...video.data(),\r\n              id: doc.id\r\n            })      \r\n          }) \r\n        })\r\n        setVideos(arr);\r\n      })\r\n    setTimeout(() => setValue(value + 1), 500);\r\n  } \r\n\r\n  return (\r\n    <Container>\r\n      {loaded && tvProgram && <>\r\n        {props.user && props.user.verified === 2 && person && <>\r\n          <AddVideo person={person} />\r\n        </>}\r\n        \r\n        <Videos \r\n          person={person}\r\n          videos={videos}\r\n          verified={props.user ? props.user.verified : 0}\r\n          isMore={isMore}\r\n          getMoreVideos={getMoreVideos}\r\n        />\r\n\r\n        <Title>\r\n          <Image src={tvProgram.image} />\r\n        </Title>\r\n        \r\n        <Directories>\r\n          {directories.length === 0 ? <>디렉토리가 없습니다</> :\r\n            directories.map((directory) => \r\n            <Directory key={directory.id}>\r\n              <DirectoryTitle \r\n                tcolor={directory.textColor}\r\n                bcolor={directory.bgColor}\r\n              >\r\n                <span>{directory.title}</span>\r\n              </DirectoryTitle>\r\n\r\n              <People bcolor={directory.bgColor}>\r\n              {people.filter((person) => person.dir === directory.id)\r\n                .map((p) => (\r\n                  <PersonCard \r\n                    key={`person-${p.id}`}\r\n                    onClick={() => getVideosOfPerson(p.index)}\r\n                  >\r\n                    <StyledAvatar src={p.image} />\r\n                    <Name>{p.name}</Name>\r\n                  </PersonCard>\r\n              ))}\r\n              </People>\r\n            </Directory>\r\n            )\r\n          }\r\n        </Directories>\r\n      </>}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default TvProgram\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  background-color: #f9f9f9;\r\n  padding: 20px;\r\n`\r\nconst Title = styled.div`\r\n  text-align: center;\r\n  padding-bottom: 30px;\r\n`\r\nconst Image = styled.img`\r\n  width: 50%;\r\n`\r\nconst Directories = styled.div`\r\n  width: 100%;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`\r\nconst Directory = styled.div`\r\n  padding: 10px;\r\n`\r\nconst DirectoryTitle = styled.div`\r\n  display: flex;\r\n  width: 200px;\r\n  height: 20px;\r\n  padding: 5px;\r\n  justify-content: center;\r\n  color: #${(props) => props.tcolor || 'ffffff'};\r\n  background-color: #${(props) => props.bcolor || '000000'};\r\n`\r\nconst People = styled.div`\r\n  min-width: 200px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  border: 1px solid #${(props) => props.bcolor || '000000'};\r\n`\r\nconst PersonCard = styled.div`\r\n  width: 150px;\r\n  padding-top: 10px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: lightgrey;\r\n  }\r\n`\r\nconst StyledAvatar = styled(Avatar)`\r\n  width: 120px !important;\r\n  height: 120px !important;\r\n  margin: auto;\r\n  border: 1px solid lightgrey;\r\n`\r\nconst Name = styled.h4`\r\n  text-align: center;\r\n  padding: 10px;\r\n  margin: 0;\r\n`","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\Main.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\sidebar\\Sidebar.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\TvProgramSlider.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\sidebar\\ManagerBox.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\sidebar\\Menu.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\sidebar\\SidebarData.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\sidebar\\SubMenu.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\people\\People.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\people\\PersonCard.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\people\\Person.js",["218","219","220","221"],"import React, { useState, useEffect } from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport styled from 'styled-components'\r\n\r\nimport { storeService } from \"src/fbase\"\r\n\r\nfunction Person() {\r\n  const { id } = useParams();\r\n  \r\n  return (\r\n    <div>\r\n      {id}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Person\r\n","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\TvPrograms.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\TvProgram.js",["222"],"import React, { useState, useEffect } from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport styled from 'styled-components'\r\n\r\nimport { storeService } from \"src/fbase\"\r\n\r\nimport PeopleBox from './PeopleBox';\r\n\r\nfunction TvProgram() {\r\n  const { id } = useParams();\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [tvProgram, setTvProgram] = useState(null);\r\n  const [title, setTitle] = useState('');\r\n  const [directories, setDirectories] = useState([]);\r\n  const [addedPeople, setAddedPeople] = useState([]);\r\n  const [people, setPeople] = useState([]);\r\n\r\n  async function getTvProgram() {\r\n    await storeService.collection('tv-programs').doc(id).get().then(function (doc) {\r\n      setTvProgram(doc.data());\r\n      setTitle(doc.data().title);\r\n    })\r\n  }\r\n\r\n  async function getDirectories() {\r\n    var dir = []; var pp = []; var arr = [];\r\n    const dirRef = storeService.collection('tv-programs').doc(id);\r\n\r\n    await dirRef.collection('directories').get().then(function (snapshot) {\r\n      snapshot.forEach(doc => dir.push({\r\n        ...doc.data(), id: doc.id, onDB: true, updated: false\r\n      }));\r\n    });\r\n\r\n    await dirRef.collection('people').get().then(function (snapshot) {\r\n      snapshot.forEach(async function (doc) {\r\n        await storeService.collection('people').doc(doc.id).get().then(function (person) {\r\n          pp.push({\r\n            id: doc.id,\r\n            dir: doc.data().dir, \r\n            name: person.data().name,\r\n            image: person.data().image,\r\n            onDB: true, updated: false\r\n          })      \r\n        }) \r\n      });\r\n    });\r\n\r\n    await storeService.collection('people').get().then(function (snapshot) {  \r\n      snapshot.forEach(doc => {\r\n        if(pp.filter(person => person.id === doc.id).length === 0) {\r\n          arr.push({\r\n            id: doc.id, \r\n            image: doc.data().image,\r\n            name: doc.data().name,\r\n            active: true,\r\n            selected: false,\r\n          })       \r\n        }\r\n      }); \r\n    });\r\n\r\n    setDirectories(dir.sort(function (a,b) {\r\n      return a.index - b.index;\r\n    })); setAddedPeople(pp); setPeople(arr);\r\n  }\r\n\r\n  function init() {\r\n    getTvProgram(); \r\n    getDirectories();\r\n    setTimeout(() => setLoaded(true), 1000);  \r\n  }\r\n\r\n  useEffect(() => init(), [])\r\n\r\n  const onInfoSave = async () => {\r\n    if(!tvProgram.image || !tvProgram.title || !tvProgram.year || !tvProgram.channel) {\r\n      alert('모든 값을 입력하세요.'); return;\r\n    }\r\n    \r\n    const docRef = storeService.collection('tv-programs').doc(id);\r\n \r\n    await docRef.get().then(function(doc) {\r\n      docRef.update(tvProgram);\r\n      alert('저장되었습니다.');\r\n      setTitle(tvProgram.title);\r\n    }).catch(function(error) {\r\n      alert(\"Error getting document:\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loaded && tvProgram &&\r\n        <div style={{width:'100%'}}>\r\n          <Container>\r\n            <Title>TV 프로그램 관리 - {title} [{id}]</Title>\r\n            \r\n            <BoxContainer>\r\n              <Box>\r\n                <Image src={tvProgram.image} alt=\"\" />\r\n              </Box>\r\n\r\n              <Box>\r\n                <InputBox>\r\n                  <Text>제목</Text>\r\n                  <Input \r\n                    value={tvProgram.title} \r\n                    onChange={(v) => setTvProgram({...tvProgram, title: v.target.value})} />\r\n                </InputBox>\r\n\r\n                <InputBox>\r\n                  <Text>이미지</Text>\r\n                  <Input \r\n                    value={tvProgram.image}\r\n                    onChange={(v) => setTvProgram({...tvProgram, image: v.target.value})} />\r\n                </InputBox>\r\n\r\n                <InputBox>\r\n                  <Text>방송사</Text>\r\n                  <Input \r\n                    value={tvProgram.channel}\r\n                    onChange={(v) => setTvProgram({...tvProgram, channel: v.target.value})} />\r\n                </InputBox>\r\n\r\n                <InputBox>\r\n                  <Text>방송년도</Text>\r\n                  <Input \r\n                    value={tvProgram.year} type=\"number\"\r\n                    onChange={(v) => setTvProgram({...tvProgram, year: v.target.value})} />\r\n                </InputBox>\r\n              </Box>\r\n            </BoxContainer>\r\n\r\n            <InputBox>\r\n              <Button onClick={onInfoSave}>저장</Button>\r\n            </InputBox>\r\n\r\n            <PeopleBox \r\n              directories={directories} setDirectories={setDirectories}\r\n              addedPeople={addedPeople} setAddedPeople={setAddedPeople}\r\n              people={people} setPeople={setPeople}\r\n            />            \r\n          </Container>\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TvProgram\r\n\r\nconst Container = styled.div`\r\n  padding: 40px;\r\n`\r\nconst Title = styled.h1`\r\n  margin: 0;\r\n`\r\nconst BoxContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 90%;\r\n  margin: auto;\r\n  padding: 20px;\r\n`\r\nconst Box = styled.div`\r\n  flex: 0.5;\r\n  text-align: center;\r\n`\r\nconst Image = styled.img`\r\n  width: 80%;\r\n  margin: 0 0;\r\n  padding: 10px 10px;\r\n  border: 1px solid lightgrey;\r\n`\r\nconst InputBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\nconst Text = styled.h4`\r\n  flex: 0.2;\r\n  text-align: center;\r\n  margin: 10px 0;\r\n`\r\nconst Input = styled.input`\r\n  flex: 0.8;\r\n  height: 30px;\r\n  margin: 10px 10px;\r\n  padding-left: 5px;\r\n  border: 1px solid lightgrey;\r\n\r\n  &:focus {\r\n    outline: 2px solid #20B2AA;\r\n  }\r\n`\r\nconst Button = styled.button`\r\n  width: 75px;\r\n  height: 50px;\r\n  margin: auto;\r\n  border: none;\r\n  transition-duration: 0.4s;\r\n  background-color: #00C851;\r\n\r\n  &:hover {\r\n    color: white;\r\n    background-color: #007E33;\r\n  }\r\n`","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\TvProgramAdd.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\people\\PeopleAdd.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\PeopleBox.js",["223","224","225","226"],"import React, { useState } from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport styled from 'styled-components'\r\n\r\nimport { storeService } from \"src/fbase\"\r\n\r\nimport { AiOutlineArrowUp, AiOutlineArrowDown } from 'react-icons/ai'\r\nimport { BsPlusCircle } from 'react-icons/bs'\r\nimport Avatar from '@material-ui/core/Avatar'\r\n\r\nimport AddPeople from './AddPeople'\r\n\r\nfunction PeopleBox(props) {\r\n  const { id } = useParams();\r\n\r\n  const [deleted, setDeleted] = useState([]);\r\n\r\n  const [did, setDid] = useState('');\r\n  const [dtitle, setDtitle] = useState('');\r\n\r\n  const onAddDirectoryClick = () => {\r\n    props.setDirectories([...props.directories, {\r\n      id: `directory${props.directories.length}`,\r\n      index: props.directories.length,\r\n      title: '새 디렉토리',\r\n      textColor: 'ffffff',\r\n      bgColor: '000000',\r\n      onDB: false,\r\n      updated: true,\r\n    }]);\r\n  }\r\n\r\n  const onApplyClick = (id) => {\r\n    let arr = props.directories.slice();\r\n    var i;\r\n    for(i=0; i<arr.length; i++) {\r\n      if(id === arr[i].id){\r\n        if(!arr[i].onDB && document.getElementById(id).value !== '') {\r\n          for(var j=0; j<arr.length; j++) {\r\n            if(i !== j && document.getElementById(id).value === arr[j].id) {\r\n              alert('중복된 id 입니다.')\r\n              document.getElementById(id).focus();\r\n              return;\r\n            }\r\n          }\r\n          arr[i].id = document.getElementById(id).value;\r\n        }\r\n\r\n        if(document.getElementById(`${id}-title`).value !== '') \r\n          arr[i].title = document.getElementById(`${id}-title`).value;\r\n        if(document.getElementById(`${id}-tcolor`).value !== '') \r\n          arr[i].textColor = document.getElementById(`${id}-tcolor`).value;\r\n        if(document.getElementById(`${id}-bgcolor`).value !== '') \r\n          arr[i].bgColor = document.getElementById(`${id}-bgcolor`).value;\r\n        break;\r\n      }\r\n    }\r\n    arr[i].updated = true;\r\n    props.setDirectories(arr);\r\n  }\r\n\r\n  const onDeleteClick = (idx) => {\r\n    if(props.directories[idx].onDB || \r\n        props.addedPeople.filter(person => person.dir === props.directories[idx].id).length !== 0) \r\n      setDeleted([...deleted, props.directories[idx]]);\r\n\r\n    if(props.directories.length === 1) {\r\n      props.setDirectories([]);      \r\n    } else {\r\n      let arr = [];\r\n\r\n      if(idx === 0) \r\n        arr = props.directories.slice(1);\r\n      else if(idx === props.directories.length-1) \r\n        arr = props.directories.slice(0,idx);\r\n      else\r\n        arr = [...props.directories.slice(0,idx), ...props.directories.slice(idx+1)];\r\n\r\n      for(var i=0; i<arr.length; i++)\r\n        arr[i].index = i;\r\n        props.setDirectories(arr);\r\n    }\r\n  }\r\n\r\n  const onMoveClick = ({idx, dir}) => {\r\n    if(idx + dir < 0 || idx + dir >= props.directories.length) \r\n      return;\r\n\r\n    var arr = props.directories.slice();\r\n\r\n    var a = arr[idx]; \r\n    a.index = idx + dir; \r\n    a.updated = true;\r\n\r\n    arr[idx] = arr[idx + dir]; \r\n    arr[idx].index = idx; \r\n    arr[idx].updated = true;\r\n\r\n    arr[idx + dir] = a;\r\n    props.setDirectories(arr);\r\n  }\r\n\r\n  const onAddPeopleButtonClick = (idx) => {\r\n    setDid(props.directories[idx].id);    setDtitle(props.directories[idx].title);\r\n    document.getElementById(\"AddPeople\").style.right = \"0\";\r\n  }\r\n  \r\n  const onAddPeople = (array) => {\r\n    var arr = props.addedPeople.slice();\r\n    array.map(data => arr.push({\r\n      id: data.id, \r\n      image: data.image, \r\n      name: data.name,\r\n      dir: did,\r\n      onDB: false,\r\n      updated: true\r\n    }));\r\n    props.setAddedPeople(arr);\r\n  }\r\n\r\n  const onPersonMove = ({idx, dir, pid}) => {\r\n    if(idx + dir < 0 || idx + dir >= props.directories.length) \r\n      return;\r\n\r\n    var arr = props.addedPeople.slice();\r\n    for(var i=0; i<arr.length; i++) {\r\n      if(arr[i].id === pid) {\r\n        arr[i].dir = props.directories[idx + dir].id;\r\n        arr[i].updated = true;\r\n        break;\r\n      }\r\n    }\r\n    props.setAddedPeople(arr);\r\n  }\r\n\r\n  const onSave = async () => {\r\n    var arr = props.addedPeople.slice();\r\n\r\n    if(deleted.length !== 0) {\r\n      for(var i=0; i<deleted.length; i++){\r\n        if(deleted[i].onDB) {\r\n          await storeService.collection('tv-programs').doc(id)\r\n          .collection('directories').doc(deleted[i].id).delete();\r\n        }\r\n\r\n        var del = arr.filter(data => data.dir === deleted[i].id);\r\n        if(del.length !== 0) {\r\n          arr = arr.filter(data => data.dir !== deleted[i].id);\r\n          for(var j=0; j<del.length; j++) {\r\n            await storeService.collection('people').doc(del[j].id)\r\n              .collection('tv-programs').doc(id).delete();\r\n            await storeService.collection('tv-programs').doc(id)\r\n              .collection('people').doc(del[j].id).delete();\r\n          }\r\n        }\r\n      }\r\n      setDeleted([]);\r\n    }\r\n\r\n    const dirRef = storeService.collection('tv-programs').doc(id);\r\n    for(var i=0; i<props.directories.length; i++) {\r\n      if(!props.directories[i].onDB || props.directories[i].updated) {\r\n        await dirRef.collection('directories').doc(props.directories[i].id).set({\r\n          index: props.directories[i].index,\r\n          title: props.directories[i].title,\r\n          textColor: props.directories[i].textColor,\r\n          bgColor: props.directories[i].bgColor,\r\n        })\r\n      } \r\n    }\r\n\r\n    const ppRef = storeService.collection('people');\r\n    for(var i=0; i<arr.length; i++) {\r\n      if(!arr[i].onDB) {\r\n        await ppRef.doc(arr[i].id).collection('tv-programs').doc(id).set({\r\n          addedDate: Date.now()\r\n        })\r\n        arr[i].onDB = true;\r\n      }\r\n      if(arr[i].updated) {\r\n        await dirRef.collection('people').doc(arr[i].id).set({\r\n          dir: arr[i].dir\r\n        })\r\n        arr[i].updated = false;\r\n      }\r\n    }\r\n    props.setPeople(arr);\r\n    alert('저장되었습니다.');\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <AddPeople\r\n        id={did}\r\n        title={dtitle}\r\n        people={props.people} setPeople={props.setPeople}\r\n        addedPeople={props.addedPeople}\r\n        onAddPeople={onAddPeople}\r\n      />\r\n\r\n      {props.directories.length === 0\r\n        ? null\r\n        : props.directories.map((data) => (\r\n            <Directory key={data.id}>\r\n              <Setting>\r\n                <DirectorySetting>\r\n                  <div>\r\n                    {data.onDB ? null : (\r\n                      <Input id={data.id} width=\"100px\" placeholder=\"id...\" />\r\n                    )}\r\n                    {data.id}\r\n                  </div>\r\n                  <div>\r\n                    <Input\r\n                      id={`${data.id}-title`}\r\n                      width=\"150px\"\r\n                      placeholder=\"title...\"\r\n                    />\r\n                    {data.title}\r\n                  </div>\r\n                  <div>\r\n                    <Input\r\n                      id={`${data.id}-bgcolor`}\r\n                      width=\"100px\"\r\n                      placeholder=\"bg-color...\"\r\n                    />\r\n                    {data.bgColor}\r\n                  </div>\r\n                  <div>\r\n                    <Input\r\n                      id={`${data.id}-tcolor`}\r\n                      width=\"100px\"\r\n                      placeholder=\"text-color...\"\r\n                    />\r\n                    {data.textColor}\r\n                  </div>\r\n                </DirectorySetting>\r\n\r\n                <ButtonBox>\r\n                  <Button\r\n                    color=\"#0275d8\"\r\n                    hoverColor=\"\"\r\n                    hoverBColor=\"#003399\"\r\n                    onClick={() => onApplyClick(data.id)}\r\n                  >\r\n                    적용\r\n                  </Button>\r\n                  <Button\r\n                    color=\"#d9534f\"\r\n                    hoverColor=\"\"\r\n                    hoverBColor=\"#ae423f\"\r\n                    onClick={() => onDeleteClick(data.index)}\r\n                  >\r\n                    삭제\r\n                  </Button>\r\n                  <Button\r\n                    color=\"#FFC0CB\"\r\n                    hoverColor=\"\"\r\n                    hoverBColor=\"#FF69B4\"\r\n                    onClick={() => onMoveClick({ idx: data.index, dir: -1 })}\r\n                  >\r\n                    <AiOutlineArrowUp />\r\n                  </Button>\r\n                  <Button\r\n                    color=\"#87CEEB\"\r\n                    hoverColor=\"\"\r\n                    hoverBColor=\"#00CCCC\"\r\n                    onClick={() => onMoveClick({ idx: data.index, dir: 1 })}\r\n                  >\r\n                    <AiOutlineArrowDown />\r\n                  </Button>\r\n                </ButtonBox>\r\n              </Setting>\r\n\r\n              <DirectoryContent>\r\n                <TopLine>\r\n                  <DirectoryContentTitle\r\n                    tcolor={data.textColor}\r\n                    bcolor={data.bgColor}\r\n                  >\r\n                    {data.title}\r\n                  </DirectoryContentTitle>\r\n                </TopLine>\r\n\r\n                <People bcolor={data.bgColor}>\r\n                  {props.addedPeople\r\n                    .filter((person) => person.dir === data.id)\r\n                    .map((p) => (\r\n                      <PersonCard key={`person-${p.id}`}>\r\n                        <StyledAvatar src={p.image} />\r\n                        <Name>{p.name}</Name>\r\n                        <div style={{textAlign:'center'}}>\r\n                          <ArrowButton \r\n                            onClick={() => onPersonMove({\r\n                              idx: data.index, \r\n                              dir: -1,\r\n                              pid: p.id\r\n                            })}>\r\n                            <AiOutlineArrowUp />\r\n                          </ArrowButton>\r\n                          <ArrowButton \r\n                            onClick={() => onPersonMove({\r\n                              idx: data.index, \r\n                              dir: 1,\r\n                              pid: p.id\r\n                            })}>\r\n                            <AiOutlineArrowDown />\r\n                          </ArrowButton>\r\n                        </div>\r\n                      </PersonCard>\r\n                    ))}\r\n                  <AddPeopleButton\r\n                    onClick={() => onAddPeopleButtonClick(data.index)}\r\n                  >\r\n                    <BsPlusCircle\r\n                      style={{ margin: \"auto\" }}\r\n                      size=\"24\"\r\n                      color=\"grey\"\r\n                    />\r\n                  </AddPeopleButton>\r\n                </People>\r\n              </DirectoryContent>\r\n            </Directory>\r\n          ))}\r\n\r\n      <AddBox onClick={onAddDirectoryClick}>\r\n        <BsPlusCircle style={{ margin: \"auto\" }} size=\"24\" color=\"grey\" />\r\n      </AddBox>\r\n\r\n      <InputBox>\r\n        <Button onClick={onSave}>저장</Button>\r\n      </InputBox>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PeopleBox\r\n\r\nconst Container = styled.div`\r\n  width: 90%;\r\n  margin: auto;\r\n  padding: 20px;\r\n`\r\nconst Directory = styled.div`\r\n  width: 100%;\r\n  margin: 10px;\r\n`\r\nconst Setting = styled.div`\r\n  display: flex;\r\n  padding: 10px;\r\n  justify-content: center;\r\n`\r\nconst DirectorySetting = styled.div`\r\n  flex: 0.6;\r\n  padding: 10px;\r\n`\r\nconst ButtonBox = styled.div`\r\n  flex: 0.4;\r\n  align-items: center;\r\n  vertical-align: middle;\r\n`\r\nconst DirectoryContent = styled.div`\r\n  padding: 10px;\r\n`\r\nconst People = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  border: 1px solid #${(props) => props.bcolor || '000000'};\r\n`\r\nconst AddPeopleButton = styled.div`\r\n  display: flex;\r\n  width: 150px;\r\n  height: 200px;\r\n  margin: 10px;\r\n  border: 1px solid lightgrey;\r\n  border-radius: 20px;\r\n  align-items: center;\r\n  background-color: #ddd;\r\n\r\n  &:hover {\r\n    background-color: #aaa;\r\n  }\r\n`\r\nconst TopLine = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\nconst Input = styled.input`\r\n  width: ${(props) => props.width || '50px'};\r\n  margin-right: 10px;\r\n  padding: 5px;\r\n`\r\nconst DirectoryContentTitle = styled.div`\r\n  width: 200px;\r\n  height: 20px;\r\n  padding: 5px;\r\n  text-align: center;\r\n  color: #${(props) => props.tcolor || 'ffffff'};\r\n  background-color: #${(props) => props.bcolor || '000000'};\r\n`\r\nconst AddBox = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100px;\r\n  margin-top: 20px;\r\n  border: 1px solid lightgrey;\r\n  border-radius: 20px;\r\n  align-items: center;\r\n  background-color: #ddd;\r\n\r\n  &:hover {\r\n    background-color: #aaa;\r\n  }\r\n`\r\nconst InputBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n`\r\nconst Button = styled.button`\r\n  width: 75px;\r\n  height: 50px;\r\n  margin: auto;\r\n  border: none;\r\n  transition-duration: 0.4s;\r\n  background-color: ${(props) => props.color || '#00C851'};\r\n\r\n  &:hover {\r\n    color: ${(props) => props.hoverColor || 'white'};\r\n    background-color: ${(props) => props.hoverBColor || '#007E33'};\r\n  }\r\n`\r\nconst PersonCard = styled.div`\r\n  width: 120px;\r\n  padding-top: 10px;\r\n\r\n  &:hover {\r\n    background-color: lightgrey;\r\n  }\r\n`\r\nconst StyledAvatar = styled(Avatar)`\r\n  width: 100px !important;\r\n  height: 100px !important;\r\n  margin: auto;\r\n  border: 1px solid lightgrey;\r\n`\r\nconst Name = styled.h4`\r\n  text-align: center;\r\n  padding: 10px;\r\n  margin: 0;\r\n`\r\nconst ArrowButton = styled.div`\r\n  width: 20px;\r\n  display: inline-block;\r\n  text-align: center;\r\n  border: 2px solid grey;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    pointer-events: none;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: aquamarine;\r\n  }\r\n`","C:\\workspace\\web\\v01-trot-tube\\src\\components\\admin\\tv-program\\AddPeople.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\main\\HomeContents.js",["227"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { storeService } from \"src/fbase\";\r\n\r\nimport TvProgramSlider from './TvProgramSlider';\r\nimport RecentVideos from './RecentVideos';\r\n\r\nfunction HomeContents(props) {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [tvs, setTvs] = useState([]);\r\n  const [videos, setVideos] = useState([]);\r\n    \r\n  async function getTvPrograms() {\r\n    let arr = [];\r\n    await storeService.collection('tv-programs')\r\n                    .where('sliderIndex', '!=', 0)\r\n                    .get().then(function (snapshot) {\r\n      snapshot.forEach(doc => arr.push({...doc.data(), id: doc.id}));\r\n    });\r\n\r\n    setTvs([...arr.sort(function (a, b) {\r\n      return a.sliderIndex - b.sliderIndex;\r\n    })]);\r\n  }\r\n\r\n  async function getRecentVideos() {\r\n    var array = [];\r\n\r\n    const ref = storeService.collection('videos');\r\n\r\n    await ref.orderBy('createdAt', 'desc').limit(20).get()\r\n      .then(function (snapshot) {\r\n        snapshot.forEach(async function(doc) {\r\n          var singer = '';\r\n          \r\n          await ref.doc(doc.id).collection('singer').get().then(function (p) {\r\n            p.forEach(function(person) {\r\n              if(singer === '') singer = person.data().name;\r\n              else singer = singer + ', ' + person.data().name;\r\n            })\r\n          })\r\n\r\n          array.push({\r\n            ...doc.data(),\r\n            id: doc.id,\r\n            singer\r\n          })\r\n        })\r\n      })\r\n    \r\n    setVideos(array);\r\n  }\r\n\r\n  function init() {\r\n    getTvPrograms(); \r\n    getRecentVideos();\r\n    setTimeout(() => setLoaded(true), 1000); \r\n  }\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, [])\r\n  \r\n  return (\r\n    <Container>\r\n      {loaded && <>\r\n        <TvProgramSlider user={props.user} tvs={tvs}/>\r\n        <RecentVideos videos={videos} />\r\n      </>}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default HomeContents\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  background-color: #f9f9f9;\r\n  padding: 0px 10px;\r\n  padding-bottom: 0;\r\n`","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\main\\TvProgramSlider.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\main\\RecentVideos.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\tv-program\\AddVideo.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\tv-program\\Videos.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\video\\Video.js",["228"],"import React, { useState, useEffect } from 'react' \r\nimport { useParams } from \"react-router-dom\";\r\nimport uuid from 'react-uuid'\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { storeService } from \"src/fbase\";\r\n\r\nimport ViewsAndLikes from './ViewsAndLikes'\r\nimport Comment from './Comment'\r\n\r\nfunction Video(props) {\r\n  const { vid } = useParams();\r\n  const ref = storeService.collection('videos').doc(vid);\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [video, setVideo] = useState(null);\r\n  const [singer, setSinger] = useState([]);\r\n  const [comments, setComments] = useState([]);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [myComment, setMyComment] = useState('');\r\n\r\n  const [value, setValue] = useState(0);\r\n  const [delay, setDelay] = useState(false);\r\n  const [more, setMore] = useState(true);\r\n\r\n  async function init() {\r\n    var array = [];\r\n    var length = 0;\r\n\r\n    await ref.get().then(function (doc) {\r\n      setVideo({...doc.data()});\r\n    })\r\n\r\n    await ref.collection('singer').get().then(function (snapshot) {\r\n      snapshot.forEach(function (singer) {\r\n        array.push({\r\n          ...singer.data(),\r\n          id: singer.id\r\n        })\r\n        length = singer.data().commentsCount;\r\n      })\r\n      setSinger(array);\r\n    })\r\n\r\n    await ref.collection('comments').orderBy('createdAt', 'desc').limit(10)\r\n      .get().then(function(snapshot) {\r\n        array = [];\r\n        snapshot.forEach(function (data) {\r\n          array.push({\r\n            ...data.data(),\r\n            id: data.id\r\n          })\r\n        })\r\n        setComments(array);\r\n      })\r\n\r\n    if(array.length === length) setMore(false);\r\n\r\n    setLoaded(true);\r\n    setTimeout(() => setValue(value + 1), 1500);\r\n    setTimeout(() => upViews(), 60000);\r\n  }\r\n\r\n  async function getLiked() {\r\n    if(props.user !== null) {\r\n      await ref.collection('liked').doc(props.user.uid).get().then(function (doc) {\r\n        setIsLiked(doc.exists);\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(value === 0) init();\r\n    getLiked();\r\n  }, [value, props.user])\r\n  \r\n  async function upViews() {\r\n    await ref.get().then(function (doc) {\r\n      var views = doc.data().views;\r\n      \r\n      if(views === undefined) \r\n        views = 1;\r\n      else\r\n        views++;\r\n      \r\n      ref.update({ views });\r\n    })\r\n  }\r\n\r\n  async function onWriteComment() {\r\n    if(myComment === '') return;\r\n  \r\n    if(delay) {\r\n      alert('3초 이내 작성/삭제 가 불가능합니다.'); return;\r\n    } else {\r\n      setDelay(true); setTimeout(() => setDelay(false), 3000);\r\n    }\r\n\r\n    const commentID = uuid()\r\n    const comment = {\r\n      uid: props.user.uid,\r\n      name: props.user.nickname,\r\n      image: props.user.photoURL,\r\n      content: myComment, \r\n      createdAt: Date.now()\r\n    };\r\n\r\n    setComments([{\r\n      id: commentID, ...comment\r\n    }, ...comments]);\r\n    setMyComment('');\r\n\r\n    await ref.get().then(function (doc) {\r\n      var commentsCount = doc.data().commentsCount;\r\n      var v = video;\r\n\r\n      if(commentsCount === undefined) \r\n        commentsCount = 1;\r\n      else\r\n        commentsCount++;\r\n\r\n      v.commentsCount = commentsCount;\r\n      setVideo(v);\r\n      ref.update({ commentsCount })\r\n    })\r\n    await ref.collection('comments').doc(commentID).set({...comment});\r\n  }\r\n\r\n  async function onDeleteComment(id) {\r\n    if(delay) {\r\n      alert('3초 이내 작성/삭제 가 불가능합니다.'); return;\r\n    } else {\r\n      setDelay(true); setTimeout(() => setDelay(false), 3000);\r\n    }\r\n    \r\n    var flag = true;\r\n    var array = [];\r\n\r\n    for(var i=0; i<comments.length; i++) {\r\n      if(id !== comments[i].id) {\r\n        array.push(comments[i]);\r\n      } else {\r\n        flag = false;\r\n      }\r\n    }\r\n\r\n    if(flag) return;\r\n    setComments(array);\r\n\r\n    await ref.get().then(function (doc) {\r\n      if(!doc.exists) return;\r\n\r\n      var commentsCount = doc.data().commentsCount - 1;\r\n      var v = video; v.commentsCount = commentsCount;\r\n\r\n      ref.update({ commentsCount })\r\n      setVideo(v);\r\n    })\r\n    await ref.collection('comments').doc(id).delete();\r\n\r\n    setComments(array);    \r\n  }\r\n\r\n  async function getMoreComments() {\r\n    if(delay) {\r\n      alert('3초 이내 재작동이 불가능합니다.'); return;\r\n    } else {\r\n      setDelay(true); setTimeout(() => setDelay(false), 3000);\r\n    }\r\n\r\n    var array = comments.slice();\r\n    \r\n    await ref.collection('comments').orderBy('createdAt', 'desc')\r\n            .startAfter(comments[comments.length-1].createdAt).limit(10)\r\n            .get().then(function (snapshot) {\r\n              snapshot.forEach(function (data) {\r\n                array.push({\r\n                  ...data.data(),\r\n                  id: data.id\r\n                })\r\n              })\r\n\r\n              if(array.length === video.commentsCount) setMore(false);\r\n              setComments(array);\r\n            })\r\n    \r\n  }\r\n\r\n  return (\r\n    <Container key='video'>\r\n      {loaded && <>\r\n        <Box flex='0.6'>    \r\n          <IframeBox>\r\n            <Iframe \r\n              src={`https://www.youtube.com/embed/${vid}?autoplay=1`}\r\n              title=\"YouTube video player\" \r\n              frameBorder=\"0\" \r\n              allow=\"\r\n                accelerometer; autoplay; clipboard-write; \r\n                encrypted-media; gyroscope; picture-in-picture\" \r\n              allowFullScreen />\r\n          </IframeBox>\r\n\r\n          <SongTitle>{video.song}</SongTitle>\r\n\r\n          <ViewsAndLikes \r\n            video={video} \r\n            singer={singer}\r\n            user={props.user}\r\n            isLiked={isLiked}\r\n            setIsLiked={setIsLiked}\r\n            setVideo={setVideo}\r\n          />\r\n        </Box>\r\n\r\n        <Box flex='0.4'>\r\n          <div>\r\n            {props.user ? \r\n              <WriteComment>\r\n                <Box flex='0.8' style={{padding:'10px'}}>\r\n                  <CommentBox value={myComment} onChange={(e) => setMyComment(e.target.value)}/>\r\n                </Box>\r\n                <Box flex='0.2' style={{padding:'10px'}}>\r\n                  <Button onClick={() => onWriteComment()}>\r\n                    댓글입력\r\n                  </Button>\r\n                </Box>\r\n              </WriteComment> \r\n              : <>\r\n              <Box flex='1' style={{border:'1px solid lightgrey'}}>\r\n                로그인 후 댓글 작성 가능\r\n              </Box>\r\n            </>}\r\n          </div>\r\n\r\n          <div style={{marginBottom:'10px'}}>댓글 {video.commentsCount}개</div>\r\n          <div style={{height:'60vh', overflowY:'scroll'}}>\r\n            {comments.length === 0 ? <>댓글이 없습니다.</> : <>\r\n              {comments.map((comment) => \r\n                <Comment key={comment.id} \r\n                        user={props.user} \r\n                        comment={comment}\r\n                        onDeleteComment={onDeleteComment}\r\n                        />\r\n              )}\r\n              {more &&\r\n                <MoreCommentsButton onClick={() => getMoreComments()}>더 보기</MoreCommentsButton>\r\n              }\r\n            </>}\r\n          </div>\r\n        </Box>\r\n      </>}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Video\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  height: 100%;\r\n  background-color: #f9f9f9;\r\n  padding: 0 10px;\r\n`\r\nconst Box = styled.div`\r\n  flex: ${(props) => props.flex || 1};\r\n  padding: 10px;\r\n`\r\nconst IframeBox = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  padding-bottom: 56.26%;\r\n`\r\nconst Iframe = styled.iframe`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\nconst SongTitle = styled.h2`\r\n  padding-left: 10px;\r\n`\r\nconst WriteComment = styled.div`\r\n  display: flex;\r\n`\r\nconst CommentBox = styled.textarea`\r\n  width: 100%;\r\n  height: 100px;\r\n  resize: none;\r\n  padding: 0;\r\n  margin: 0;\r\n`\r\nconst Button = styled.button`\r\n  width: 100%;\r\n  height: 100px;\r\n  padding: 0;\r\n  margin: 0;\r\n`\r\nconst MoreCommentsButton = styled.button`\r\n  width: 100%;\r\n  height: 50px;\r\n  margin-top: 10px;\r\n`","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\video\\ViewsAndLikes.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\func.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\video\\Comment.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\hot\\Hot.js",["229"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { storeService } from \"src/fbase\";\r\nimport VideoCard from './VideoCard';\r\n\r\nfunction Hot() {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [hotVideoByLike, setHotVideoByLike] = useState([]);\r\n  const [hotVideoByView, setHotVideoByView] = useState([]);\r\n\r\n  async function getHotVideos() {\r\n    const ref = storeService.collection('videos');\r\n\r\n    await ref.where('likes', '>=', 1).orderBy('likes', 'desc').limit(10).get()\r\n      .then(function (snapshot) {\r\n        var array = []; var index = 1;\r\n        snapshot.forEach(async function(doc) {\r\n          var singer = '';\r\n\r\n          await ref.doc(doc.id).collection('singer').get().then(function (p) {\r\n            p.forEach(function(person) {\r\n              if(singer === '') singer = person.data().name;\r\n              else singer = singer + ', ' + person.data().name;\r\n            })\r\n          })\r\n\r\n          array.push({\r\n            ...doc.data(),\r\n            id: doc.id,\r\n            index: index++,\r\n            singer\r\n          })\r\n        })\r\n        setHotVideoByLike(array);\r\n      })\r\n\r\n    await ref.where('views', '>=', 1).orderBy('views', 'desc').limit(10).get()\r\n      .then(function (snapshot) {\r\n        var array = []; var index = 1;\r\n        snapshot.forEach(async function(doc) {\r\n          var singer = '';\r\n          \r\n          await ref.doc(doc.id).collection('singer').get().then(function (p) {\r\n            p.forEach(function(person) {\r\n              if(singer === '') singer = person.data().name;\r\n              else singer = singer + ', ' + person.data().name;\r\n            })\r\n          })\r\n\r\n          array.push({\r\n            ...doc.data(),\r\n            id: doc.id,\r\n            index: index++,\r\n            singer\r\n          }) \r\n        })\r\n        setHotVideoByView(array);\r\n      })\r\n  }\r\n\r\n  function init() {\r\n    getHotVideos(); \r\n    setTimeout(() => setLoaded(true), 1500);  \r\n  }\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, [])\r\n\r\n  return (\r\n    <>{loaded &&\r\n      <Container>\r\n        <Box flex='0.5'>\r\n          <Title>좋아요</Title>\r\n          {hotVideoByLike &&\r\n            hotVideoByLike.map((v) => <VideoCard key={v.id} video={v} />)\r\n          }\r\n        </Box>\r\n\r\n        <Box flex='0.5'>\r\n          <Title>조회수</Title>\r\n          {hotVideoByView &&\r\n            hotVideoByView.map((v) => <VideoCard key={v.id} video={v} />)\r\n          }\r\n        </Box>\r\n      </Container>\r\n    }</>\r\n  )\r\n}\r\n\r\nexport default Hot\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  height: 100%;\r\n  background-color: #f9f9f9;\r\n  padding: 0 10px;\r\n`\r\nconst Box = styled.div`\r\n  flex: ${(props) => props.flex || 1};\r\n  padding: 10px;\r\n`\r\nconst Title = styled.h2`\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n`","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\hot\\VideoCard.js",["230","231"],"import React from 'react' \r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { dateToString2, viewsToString } from \"src/func\"\r\n\r\nfunction VideoCard(props) {\r\n  return (\r\n    <Container>\r\n      <Link to={`/video/${props.video.id}`} style={{textDecoration:'none', color:'black'}}>\r\n        <VideoRow>\r\n          <RankBox>\r\n            <Rank>{props.video.index}</Rank>\r\n          </RankBox>\r\n\r\n          <ImageBox>\r\n            <Image src={`http://img.youtube.com/vi/${props.video.id}/0.jpg`}/>\r\n          </ImageBox>\r\n\r\n          <ContentBox>\r\n            <Content>{props.video.singer}</Content>\r\n\r\n            <Content>{props.video.song}</Content>\r\n\r\n            <Content color='grey' style={{fontSize:'0.8rem'}}>\r\n              {viewsToString(props.video.views)\r\n              } • 좋아요 : {props.video.likes\r\n              } • {dateToString2(props.video.createdAt)}\r\n            </Content>\r\n          </ContentBox>\r\n        </VideoRow>\r\n      </Link>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default VideoCard\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  background-color: #f9f9f9;\r\n  padding: 0px 10px;\r\n  margin-bottom: 20px;\r\n`\r\nconst VideoRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 90%; \r\n  margin: auto;\r\n`\r\nconst RankBox = styled.div`\r\n  flex: 0.1;\r\n`\r\nconst Rank = styled.h1`\r\n  \r\n`\r\nconst ImageBox = styled.div`\r\n  flex: 0.4;\r\n`\r\nconst Image = styled.img`\r\n  width: 100%;\r\n`\r\nconst ContentBox = styled.div`\r\n  flex: 0.5;\r\n  flex-direction: column;\r\n`\r\nconst Content = styled.h4`\r\n  padding-left: 50px;\r\n  color: ${(props) => props.color || 'black'};\r\n`\r\n\r\nconst UserName = styled.h4`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;  \r\n`\r\nconst JoinDate = styled.p`\r\n  color: #606060;\r\n  font-size: small !important;\r\n`","C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\list\\List.js",[],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\like\\Like.js",["232","233"],"C:\\workspace\\web\\v01-trot-tube\\src\\components\\home\\contents\\like\\LikeVideo.js",[],{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"234","replacedBy":"238"},{"ruleId":"236","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":121,"column":7,"nodeType":"242","messageId":"243","endLine":121,"endColumn":23},{"ruleId":"240","severity":1,"message":"244","line":9,"column":10,"nodeType":"242","messageId":"243","endLine":9,"endColumn":25},{"ruleId":"240","severity":1,"message":"245","line":9,"column":43,"nodeType":"242","messageId":"243","endLine":9,"endColumn":55},{"ruleId":"240","severity":1,"message":"246","line":10,"column":10,"nodeType":"242","messageId":"243","endLine":10,"endColumn":21},{"ruleId":"247","severity":1,"message":"248","line":73,"column":6,"nodeType":"249","endLine":73,"endColumn":13,"suggestions":"250"},{"ruleId":"240","severity":1,"message":"251","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":25},{"ruleId":"240","severity":1,"message":"252","line":1,"column":27,"nodeType":"242","messageId":"243","endLine":1,"endColumn":36},{"ruleId":"240","severity":1,"message":"253","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":14},{"ruleId":"240","severity":1,"message":"254","line":6,"column":10,"nodeType":"242","messageId":"243","endLine":6,"endColumn":22},{"ruleId":"247","severity":1,"message":"248","line":76,"column":27,"nodeType":"249","endLine":76,"endColumn":29,"suggestions":"255"},{"ruleId":"256","severity":1,"message":"257","line":147,"column":30,"nodeType":"258","messageId":"259","endLine":147,"endColumn":64},{"ruleId":"256","severity":1,"message":"257","line":149,"column":28,"nodeType":"258","messageId":"259","endLine":149,"endColumn":62},{"ruleId":"260","severity":1,"message":"261","line":162,"column":13,"nodeType":"242","messageId":"262","endLine":162,"endColumn":14},{"ruleId":"260","severity":1,"message":"261","line":174,"column":13,"nodeType":"242","messageId":"262","endLine":174,"endColumn":14},{"ruleId":"247","severity":1,"message":"248","line":64,"column":6,"nodeType":"249","endLine":64,"endColumn":8,"suggestions":"263"},{"ruleId":"247","severity":1,"message":"264","line":76,"column":6,"nodeType":"249","endLine":76,"endColumn":25,"suggestions":"265"},{"ruleId":"247","severity":1,"message":"248","line":70,"column":6,"nodeType":"249","endLine":70,"endColumn":8,"suggestions":"266"},{"ruleId":"240","severity":1,"message":"267","line":73,"column":7,"nodeType":"242","messageId":"243","endLine":73,"endColumn":15},{"ruleId":"240","severity":1,"message":"268","line":78,"column":7,"nodeType":"242","messageId":"243","endLine":78,"endColumn":15},{"ruleId":"247","severity":1,"message":"248","line":56,"column":6,"nodeType":"249","endLine":56,"endColumn":18,"suggestions":"269"},{"ruleId":"240","severity":1,"message":"270","line":66,"column":9,"nodeType":"242","messageId":"243","endLine":66,"endColumn":15},"no-native-reassign",["271"],"no-negated-in-lhs",["272"],["271"],["272"],"no-unused-vars","'NotificationIcon' is assigned a value but never used.","Identifier","unusedVar","'MdSubscriptions' is defined but never used.","'MdWatchLater' is defined but never used.","'RiVideoFill' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.","ArrayExpression",["273"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'styled' is defined but never used.","'storeService' is defined but never used.",["274"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","ArrowFunctionExpression","unsafeRefs","no-redeclare","'i' is already defined.","redeclared",["275"],"React Hook useEffect has missing dependencies: 'getLiked' and 'init'. Either include them or remove the dependency array.",["276"],["277"],"'UserName' is assigned a value but never used.","'JoinDate' is assigned a value but never used.",["278"],"'length' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"281","fix":"283"},{"desc":"284","fix":"285"},{"desc":"281","fix":"286"},{"desc":"287","fix":"288"},"Update the dependencies array to be: [init, value]",{"range":"289","text":"290"},"Update the dependencies array to be: [init]",{"range":"291","text":"292"},{"range":"293","text":"292"},"Update the dependencies array to be: [value, props.user, init, getLiked]",{"range":"294","text":"295"},{"range":"296","text":"292"},"Update the dependencies array to be: [init, props.user]",{"range":"297","text":"298"},[2052,2059],"[init, value]",[2310,2312],"[init]",[1717,1719],[2067,2086],"[value, props.user, init, getLiked]",[2038,2040],[1512,1524],"[init, props.user]"]